// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderStatusData.proto

#ifndef PROTOBUF_OrderStatusData_2eproto__INCLUDED
#define PROTOBUF_OrderStatusData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tigeropen {
namespace push {
namespace pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_OrderStatusData_2eproto();
void protobuf_InitDefaults_OrderStatusData_2eproto();
void protobuf_AssignDesc_OrderStatusData_2eproto();
void protobuf_ShutdownFile_OrderStatusData_2eproto();

class OrderStatusData;

// ===================================================================

class OrderStatusData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tigeropen.push.pb.OrderStatusData) */ {
 public:
  OrderStatusData();
  virtual ~OrderStatusData();

  OrderStatusData(const OrderStatusData& from);

  inline OrderStatusData& operator=(const OrderStatusData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderStatusData& default_instance();

  static const OrderStatusData* internal_default_instance();

  void Swap(OrderStatusData* other);

  // implements Message ----------------------------------------------

  inline OrderStatusData* New() const { return New(NULL); }

  OrderStatusData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderStatusData& from);
  void MergeFrom(const OrderStatusData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OrderStatusData* other);
  void UnsafeMergeFrom(const OrderStatusData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional string account = 2;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string symbol = 3;
  void clear_symbol();
  static const int kSymbolFieldNumber = 3;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // optional string expiry = 4;
  void clear_expiry();
  static const int kExpiryFieldNumber = 4;
  const ::std::string& expiry() const;
  void set_expiry(const ::std::string& value);
  void set_expiry(const char* value);
  void set_expiry(const char* value, size_t size);
  ::std::string* mutable_expiry();
  ::std::string* release_expiry();
  void set_allocated_expiry(::std::string* expiry);

  // optional string strike = 5;
  void clear_strike();
  static const int kStrikeFieldNumber = 5;
  const ::std::string& strike() const;
  void set_strike(const ::std::string& value);
  void set_strike(const char* value);
  void set_strike(const char* value, size_t size);
  ::std::string* mutable_strike();
  ::std::string* release_strike();
  void set_allocated_strike(::std::string* strike);

  // optional string right = 6;
  void clear_right();
  static const int kRightFieldNumber = 6;
  const ::std::string& right() const;
  void set_right(const ::std::string& value);
  void set_right(const char* value);
  void set_right(const char* value, size_t size);
  ::std::string* mutable_right();
  ::std::string* release_right();
  void set_allocated_right(::std::string* right);

  // optional string identifier = 7;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 7;
  const ::std::string& identifier() const;
  void set_identifier(const ::std::string& value);
  void set_identifier(const char* value);
  void set_identifier(const char* value, size_t size);
  ::std::string* mutable_identifier();
  ::std::string* release_identifier();
  void set_allocated_identifier(::std::string* identifier);

  // optional uint32 multiplier = 8;
  void clear_multiplier();
  static const int kMultiplierFieldNumber = 8;
  ::google::protobuf::uint32 multiplier() const;
  void set_multiplier(::google::protobuf::uint32 value);

  // optional string action = 9;
  void clear_action();
  static const int kActionFieldNumber = 9;
  const ::std::string& action() const;
  void set_action(const ::std::string& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  ::std::string* mutable_action();
  ::std::string* release_action();
  void set_allocated_action(::std::string* action);

  // optional string market = 10;
  void clear_market();
  static const int kMarketFieldNumber = 10;
  const ::std::string& market() const;
  void set_market(const ::std::string& value);
  void set_market(const char* value);
  void set_market(const char* value, size_t size);
  ::std::string* mutable_market();
  ::std::string* release_market();
  void set_allocated_market(::std::string* market);

  // optional string currency = 11;
  void clear_currency();
  static const int kCurrencyFieldNumber = 11;
  const ::std::string& currency() const;
  void set_currency(const ::std::string& value);
  void set_currency(const char* value);
  void set_currency(const char* value, size_t size);
  ::std::string* mutable_currency();
  ::std::string* release_currency();
  void set_allocated_currency(::std::string* currency);

  // optional string segType = 12;
  void clear_segtype();
  static const int kSegTypeFieldNumber = 12;
  const ::std::string& segtype() const;
  void set_segtype(const ::std::string& value);
  void set_segtype(const char* value);
  void set_segtype(const char* value, size_t size);
  ::std::string* mutable_segtype();
  ::std::string* release_segtype();
  void set_allocated_segtype(::std::string* segtype);

  // optional string secType = 13;
  void clear_sectype();
  static const int kSecTypeFieldNumber = 13;
  const ::std::string& sectype() const;
  void set_sectype(const ::std::string& value);
  void set_sectype(const char* value);
  void set_sectype(const char* value, size_t size);
  ::std::string* mutable_sectype();
  ::std::string* release_sectype();
  void set_allocated_sectype(::std::string* sectype);

  // optional string orderType = 14;
  void clear_ordertype();
  static const int kOrderTypeFieldNumber = 14;
  const ::std::string& ordertype() const;
  void set_ordertype(const ::std::string& value);
  void set_ordertype(const char* value);
  void set_ordertype(const char* value, size_t size);
  ::std::string* mutable_ordertype();
  ::std::string* release_ordertype();
  void set_allocated_ordertype(::std::string* ordertype);

  // optional bool isLong = 15;
  void clear_islong();
  static const int kIsLongFieldNumber = 15;
  bool islong() const;
  void set_islong(bool value);

  // optional sint64 totalQuantity = 16;
  void clear_totalquantity();
  static const int kTotalQuantityFieldNumber = 16;
  ::google::protobuf::int64 totalquantity() const;
  void set_totalquantity(::google::protobuf::int64 value);

  // optional sint32 totalQuantityScale = 17;
  void clear_totalquantityscale();
  static const int kTotalQuantityScaleFieldNumber = 17;
  ::google::protobuf::int32 totalquantityscale() const;
  void set_totalquantityscale(::google::protobuf::int32 value);

  // optional sint64 filledQuantity = 18;
  void clear_filledquantity();
  static const int kFilledQuantityFieldNumber = 18;
  ::google::protobuf::int64 filledquantity() const;
  void set_filledquantity(::google::protobuf::int64 value);

  // optional sint32 filledQuantityScale = 19;
  void clear_filledquantityscale();
  static const int kFilledQuantityScaleFieldNumber = 19;
  ::google::protobuf::int32 filledquantityscale() const;
  void set_filledquantityscale(::google::protobuf::int32 value);

  // optional double avgFillPrice = 20;
  void clear_avgfillprice();
  static const int kAvgFillPriceFieldNumber = 20;
  double avgfillprice() const;
  void set_avgfillprice(double value);

  // optional double limitPrice = 21;
  void clear_limitprice();
  static const int kLimitPriceFieldNumber = 21;
  double limitprice() const;
  void set_limitprice(double value);

  // optional double stopPrice = 22;
  void clear_stopprice();
  static const int kStopPriceFieldNumber = 22;
  double stopprice() const;
  void set_stopprice(double value);

  // optional double realizedPnl = 23;
  void clear_realizedpnl();
  static const int kRealizedPnlFieldNumber = 23;
  double realizedpnl() const;
  void set_realizedpnl(double value);

  // optional string status = 24;
  void clear_status();
  static const int kStatusFieldNumber = 24;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // optional string replaceStatus = 25;
  void clear_replacestatus();
  static const int kReplaceStatusFieldNumber = 25;
  const ::std::string& replacestatus() const;
  void set_replacestatus(const ::std::string& value);
  void set_replacestatus(const char* value);
  void set_replacestatus(const char* value, size_t size);
  ::std::string* mutable_replacestatus();
  ::std::string* release_replacestatus();
  void set_allocated_replacestatus(::std::string* replacestatus);

  // optional string cancelStatus = 26;
  void clear_cancelstatus();
  static const int kCancelStatusFieldNumber = 26;
  const ::std::string& cancelstatus() const;
  void set_cancelstatus(const ::std::string& value);
  void set_cancelstatus(const char* value);
  void set_cancelstatus(const char* value, size_t size);
  ::std::string* mutable_cancelstatus();
  ::std::string* release_cancelstatus();
  void set_allocated_cancelstatus(::std::string* cancelstatus);

  // optional bool outsideRth = 27;
  void clear_outsiderth();
  static const int kOutsideRthFieldNumber = 27;
  bool outsiderth() const;
  void set_outsiderth(bool value);

  // optional bool canModify = 28;
  void clear_canmodify();
  static const int kCanModifyFieldNumber = 28;
  bool canmodify() const;
  void set_canmodify(bool value);

  // optional bool canCancel = 29;
  void clear_cancancel();
  static const int kCanCancelFieldNumber = 29;
  bool cancancel() const;
  void set_cancancel(bool value);

  // optional bool liquidation = 30;
  void clear_liquidation();
  static const int kLiquidationFieldNumber = 30;
  bool liquidation() const;
  void set_liquidation(bool value);

  // optional string name = 31;
  void clear_name();
  static const int kNameFieldNumber = 31;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string source = 32;
  void clear_source();
  static const int kSourceFieldNumber = 32;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // optional string errorMsg = 33;
  void clear_errormsg();
  static const int kErrorMsgFieldNumber = 33;
  const ::std::string& errormsg() const;
  void set_errormsg(const ::std::string& value);
  void set_errormsg(const char* value);
  void set_errormsg(const char* value, size_t size);
  ::std::string* mutable_errormsg();
  ::std::string* release_errormsg();
  void set_allocated_errormsg(::std::string* errormsg);

  // optional string attrDesc = 34;
  void clear_attrdesc();
  static const int kAttrDescFieldNumber = 34;
  const ::std::string& attrdesc() const;
  void set_attrdesc(const ::std::string& value);
  void set_attrdesc(const char* value);
  void set_attrdesc(const char* value, size_t size);
  ::std::string* mutable_attrdesc();
  ::std::string* release_attrdesc();
  void set_allocated_attrdesc(::std::string* attrdesc);

  // optional float commissionAndFee = 35;
  void clear_commissionandfee();
  static const int kCommissionAndFeeFieldNumber = 35;
  float commissionandfee() const;
  void set_commissionandfee(float value);

  // optional uint64 openTime = 36;
  void clear_opentime();
  static const int kOpenTimeFieldNumber = 36;
  ::google::protobuf::uint64 opentime() const;
  void set_opentime(::google::protobuf::uint64 value);

  // optional uint64 timestamp = 37;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 37;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // optional string userMark = 38;
  void clear_usermark();
  static const int kUserMarkFieldNumber = 38;
  const ::std::string& usermark() const;
  void set_usermark(const ::std::string& value);
  void set_usermark(const char* value);
  void set_usermark(const char* value, size_t size);
  ::std::string* mutable_usermark();
  ::std::string* release_usermark();
  void set_allocated_usermark(::std::string* usermark);

  // optional double totalCashAmount = 39;
  void clear_totalcashamount();
  static const int kTotalCashAmountFieldNumber = 39;
  double totalcashamount() const;
  void set_totalcashamount(double value);

  // optional double filledCashAmount = 40;
  void clear_filledcashamount();
  static const int kFilledCashAmountFieldNumber = 40;
  double filledcashamount() const;
  void set_filledcashamount(double value);

  // optional double gst = 41;
  void clear_gst();
  static const int kGstFieldNumber = 41;
  double gst() const;
  void set_gst(double value);

  // @@protoc_insertion_point(class_scope:tigeropen.push.pb.OrderStatusData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::internal::ArenaStringPtr expiry_;
  ::google::protobuf::internal::ArenaStringPtr strike_;
  ::google::protobuf::internal::ArenaStringPtr right_;
  ::google::protobuf::internal::ArenaStringPtr identifier_;
  ::google::protobuf::internal::ArenaStringPtr action_;
  ::google::protobuf::internal::ArenaStringPtr market_;
  ::google::protobuf::internal::ArenaStringPtr currency_;
  ::google::protobuf::internal::ArenaStringPtr segtype_;
  ::google::protobuf::internal::ArenaStringPtr sectype_;
  ::google::protobuf::internal::ArenaStringPtr ordertype_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::internal::ArenaStringPtr replacestatus_;
  ::google::protobuf::internal::ArenaStringPtr cancelstatus_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr errormsg_;
  ::google::protobuf::internal::ArenaStringPtr attrdesc_;
  ::google::protobuf::internal::ArenaStringPtr usermark_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::uint32 multiplier_;
  ::google::protobuf::int32 totalquantityscale_;
  ::google::protobuf::int64 totalquantity_;
  ::google::protobuf::int64 filledquantity_;
  double avgfillprice_;
  double limitprice_;
  double stopprice_;
  double realizedpnl_;
  ::google::protobuf::int32 filledquantityscale_;
  bool islong_;
  bool outsiderth_;
  bool canmodify_;
  bool cancancel_;
  bool liquidation_;
  float commissionandfee_;
  ::google::protobuf::uint64 opentime_;
  ::google::protobuf::uint64 timestamp_;
  double totalcashamount_;
  double filledcashamount_;
  double gst_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_OrderStatusData_2eproto_impl();
  friend void  protobuf_AddDesc_OrderStatusData_2eproto_impl();
  friend void protobuf_AssignDesc_OrderStatusData_2eproto();
  friend void protobuf_ShutdownFile_OrderStatusData_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OrderStatusData> OrderStatusData_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderStatusData

// optional sint64 id = 1;
inline void OrderStatusData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderStatusData::id() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.id)
  return id_;
}
inline void OrderStatusData::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.id)
}

// optional string account = 2;
inline void OrderStatusData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::account() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.account)
}
inline void OrderStatusData::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.account)
}
inline void OrderStatusData::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.account)
}
inline ::std::string* OrderStatusData::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_account() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.account)
}

// optional string symbol = 3;
inline void OrderStatusData::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::symbol() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.symbol)
  return symbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.symbol)
}
inline void OrderStatusData::set_symbol(const char* value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.symbol)
}
inline void OrderStatusData::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.symbol)
}
inline ::std::string* OrderStatusData::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_symbol() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.symbol)
}

// optional string expiry = 4;
inline void OrderStatusData::clear_expiry() {
  expiry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::expiry() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.expiry)
  return expiry_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_expiry(const ::std::string& value) {
  
  expiry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.expiry)
}
inline void OrderStatusData::set_expiry(const char* value) {
  
  expiry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.expiry)
}
inline void OrderStatusData::set_expiry(const char* value, size_t size) {
  
  expiry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.expiry)
}
inline ::std::string* OrderStatusData::mutable_expiry() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.expiry)
  return expiry_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_expiry() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.expiry)
  
  return expiry_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_expiry(::std::string* expiry) {
  if (expiry != NULL) {
    
  } else {
    
  }
  expiry_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiry);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.expiry)
}

// optional string strike = 5;
inline void OrderStatusData::clear_strike() {
  strike_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::strike() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.strike)
  return strike_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_strike(const ::std::string& value) {
  
  strike_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.strike)
}
inline void OrderStatusData::set_strike(const char* value) {
  
  strike_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.strike)
}
inline void OrderStatusData::set_strike(const char* value, size_t size) {
  
  strike_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.strike)
}
inline ::std::string* OrderStatusData::mutable_strike() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.strike)
  return strike_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_strike() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.strike)
  
  return strike_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_strike(::std::string* strike) {
  if (strike != NULL) {
    
  } else {
    
  }
  strike_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strike);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.strike)
}

// optional string right = 6;
inline void OrderStatusData::clear_right() {
  right_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::right() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.right)
  return right_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_right(const ::std::string& value) {
  
  right_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.right)
}
inline void OrderStatusData::set_right(const char* value) {
  
  right_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.right)
}
inline void OrderStatusData::set_right(const char* value, size_t size) {
  
  right_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.right)
}
inline ::std::string* OrderStatusData::mutable_right() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.right)
  return right_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_right() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.right)
  
  return right_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_right(::std::string* right) {
  if (right != NULL) {
    
  } else {
    
  }
  right_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), right);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.right)
}

// optional string identifier = 7;
inline void OrderStatusData::clear_identifier() {
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::identifier() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.identifier)
  return identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_identifier(const ::std::string& value) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.identifier)
}
inline void OrderStatusData::set_identifier(const char* value) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.identifier)
}
inline void OrderStatusData::set_identifier(const char* value, size_t size) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.identifier)
}
inline ::std::string* OrderStatusData::mutable_identifier() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.identifier)
  return identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_identifier() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.identifier)
  
  return identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_identifier(::std::string* identifier) {
  if (identifier != NULL) {
    
  } else {
    
  }
  identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifier);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.identifier)
}

// optional uint32 multiplier = 8;
inline void OrderStatusData::clear_multiplier() {
  multiplier_ = 0u;
}
inline ::google::protobuf::uint32 OrderStatusData::multiplier() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.multiplier)
  return multiplier_;
}
inline void OrderStatusData::set_multiplier(::google::protobuf::uint32 value) {
  
  multiplier_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.multiplier)
}

// optional string action = 9;
inline void OrderStatusData::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::action() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.action)
  return action_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.action)
}
inline void OrderStatusData::set_action(const char* value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.action)
}
inline void OrderStatusData::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.action)
}
inline ::std::string* OrderStatusData::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_action() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.action)
}

// optional string market = 10;
inline void OrderStatusData::clear_market() {
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::market() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.market)
  return market_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_market(const ::std::string& value) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.market)
}
inline void OrderStatusData::set_market(const char* value) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.market)
}
inline void OrderStatusData::set_market(const char* value, size_t size) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.market)
}
inline ::std::string* OrderStatusData::mutable_market() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.market)
  return market_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_market() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.market)
  
  return market_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_market(::std::string* market) {
  if (market != NULL) {
    
  } else {
    
  }
  market_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), market);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.market)
}

// optional string currency = 11;
inline void OrderStatusData::clear_currency() {
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::currency() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.currency)
  return currency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_currency(const ::std::string& value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.currency)
}
inline void OrderStatusData::set_currency(const char* value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.currency)
}
inline void OrderStatusData::set_currency(const char* value, size_t size) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.currency)
}
inline ::std::string* OrderStatusData::mutable_currency() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.currency)
  return currency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_currency() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.currency)
  
  return currency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_currency(::std::string* currency) {
  if (currency != NULL) {
    
  } else {
    
  }
  currency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.currency)
}

// optional string segType = 12;
inline void OrderStatusData::clear_segtype() {
  segtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::segtype() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.segType)
  return segtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_segtype(const ::std::string& value) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.segType)
}
inline void OrderStatusData::set_segtype(const char* value) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.segType)
}
inline void OrderStatusData::set_segtype(const char* value, size_t size) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.segType)
}
inline ::std::string* OrderStatusData::mutable_segtype() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.segType)
  return segtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_segtype() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.segType)
  
  return segtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_segtype(::std::string* segtype) {
  if (segtype != NULL) {
    
  } else {
    
  }
  segtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segtype);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.segType)
}

// optional string secType = 13;
inline void OrderStatusData::clear_sectype() {
  sectype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::sectype() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.secType)
  return sectype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_sectype(const ::std::string& value) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.secType)
}
inline void OrderStatusData::set_sectype(const char* value) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.secType)
}
inline void OrderStatusData::set_sectype(const char* value, size_t size) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.secType)
}
inline ::std::string* OrderStatusData::mutable_sectype() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.secType)
  return sectype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_sectype() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.secType)
  
  return sectype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_sectype(::std::string* sectype) {
  if (sectype != NULL) {
    
  } else {
    
  }
  sectype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sectype);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.secType)
}

// optional string orderType = 14;
inline void OrderStatusData::clear_ordertype() {
  ordertype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::ordertype() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.orderType)
  return ordertype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_ordertype(const ::std::string& value) {
  
  ordertype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.orderType)
}
inline void OrderStatusData::set_ordertype(const char* value) {
  
  ordertype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.orderType)
}
inline void OrderStatusData::set_ordertype(const char* value, size_t size) {
  
  ordertype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.orderType)
}
inline ::std::string* OrderStatusData::mutable_ordertype() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.orderType)
  return ordertype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_ordertype() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.orderType)
  
  return ordertype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_ordertype(::std::string* ordertype) {
  if (ordertype != NULL) {
    
  } else {
    
  }
  ordertype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordertype);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.orderType)
}

// optional bool isLong = 15;
inline void OrderStatusData::clear_islong() {
  islong_ = false;
}
inline bool OrderStatusData::islong() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.isLong)
  return islong_;
}
inline void OrderStatusData::set_islong(bool value) {
  
  islong_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.isLong)
}

// optional sint64 totalQuantity = 16;
inline void OrderStatusData::clear_totalquantity() {
  totalquantity_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderStatusData::totalquantity() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.totalQuantity)
  return totalquantity_;
}
inline void OrderStatusData::set_totalquantity(::google::protobuf::int64 value) {
  
  totalquantity_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.totalQuantity)
}

// optional sint32 totalQuantityScale = 17;
inline void OrderStatusData::clear_totalquantityscale() {
  totalquantityscale_ = 0;
}
inline ::google::protobuf::int32 OrderStatusData::totalquantityscale() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.totalQuantityScale)
  return totalquantityscale_;
}
inline void OrderStatusData::set_totalquantityscale(::google::protobuf::int32 value) {
  
  totalquantityscale_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.totalQuantityScale)
}

// optional sint64 filledQuantity = 18;
inline void OrderStatusData::clear_filledquantity() {
  filledquantity_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderStatusData::filledquantity() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.filledQuantity)
  return filledquantity_;
}
inline void OrderStatusData::set_filledquantity(::google::protobuf::int64 value) {
  
  filledquantity_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.filledQuantity)
}

// optional sint32 filledQuantityScale = 19;
inline void OrderStatusData::clear_filledquantityscale() {
  filledquantityscale_ = 0;
}
inline ::google::protobuf::int32 OrderStatusData::filledquantityscale() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.filledQuantityScale)
  return filledquantityscale_;
}
inline void OrderStatusData::set_filledquantityscale(::google::protobuf::int32 value) {
  
  filledquantityscale_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.filledQuantityScale)
}

// optional double avgFillPrice = 20;
inline void OrderStatusData::clear_avgfillprice() {
  avgfillprice_ = 0;
}
inline double OrderStatusData::avgfillprice() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.avgFillPrice)
  return avgfillprice_;
}
inline void OrderStatusData::set_avgfillprice(double value) {
  
  avgfillprice_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.avgFillPrice)
}

// optional double limitPrice = 21;
inline void OrderStatusData::clear_limitprice() {
  limitprice_ = 0;
}
inline double OrderStatusData::limitprice() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.limitPrice)
  return limitprice_;
}
inline void OrderStatusData::set_limitprice(double value) {
  
  limitprice_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.limitPrice)
}

// optional double stopPrice = 22;
inline void OrderStatusData::clear_stopprice() {
  stopprice_ = 0;
}
inline double OrderStatusData::stopprice() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.stopPrice)
  return stopprice_;
}
inline void OrderStatusData::set_stopprice(double value) {
  
  stopprice_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.stopPrice)
}

// optional double realizedPnl = 23;
inline void OrderStatusData::clear_realizedpnl() {
  realizedpnl_ = 0;
}
inline double OrderStatusData::realizedpnl() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.realizedPnl)
  return realizedpnl_;
}
inline void OrderStatusData::set_realizedpnl(double value) {
  
  realizedpnl_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.realizedPnl)
}

// optional string status = 24;
inline void OrderStatusData::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::status() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.status)
  return status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.status)
}
inline void OrderStatusData::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.status)
}
inline void OrderStatusData::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.status)
}
inline ::std::string* OrderStatusData::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_status() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.status)
}

// optional string replaceStatus = 25;
inline void OrderStatusData::clear_replacestatus() {
  replacestatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::replacestatus() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.replaceStatus)
  return replacestatus_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_replacestatus(const ::std::string& value) {
  
  replacestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.replaceStatus)
}
inline void OrderStatusData::set_replacestatus(const char* value) {
  
  replacestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.replaceStatus)
}
inline void OrderStatusData::set_replacestatus(const char* value, size_t size) {
  
  replacestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.replaceStatus)
}
inline ::std::string* OrderStatusData::mutable_replacestatus() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.replaceStatus)
  return replacestatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_replacestatus() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.replaceStatus)
  
  return replacestatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_replacestatus(::std::string* replacestatus) {
  if (replacestatus != NULL) {
    
  } else {
    
  }
  replacestatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), replacestatus);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.replaceStatus)
}

// optional string cancelStatus = 26;
inline void OrderStatusData::clear_cancelstatus() {
  cancelstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::cancelstatus() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.cancelStatus)
  return cancelstatus_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_cancelstatus(const ::std::string& value) {
  
  cancelstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.cancelStatus)
}
inline void OrderStatusData::set_cancelstatus(const char* value) {
  
  cancelstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.cancelStatus)
}
inline void OrderStatusData::set_cancelstatus(const char* value, size_t size) {
  
  cancelstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.cancelStatus)
}
inline ::std::string* OrderStatusData::mutable_cancelstatus() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.cancelStatus)
  return cancelstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_cancelstatus() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.cancelStatus)
  
  return cancelstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_cancelstatus(::std::string* cancelstatus) {
  if (cancelstatus != NULL) {
    
  } else {
    
  }
  cancelstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cancelstatus);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.cancelStatus)
}

// optional bool outsideRth = 27;
inline void OrderStatusData::clear_outsiderth() {
  outsiderth_ = false;
}
inline bool OrderStatusData::outsiderth() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.outsideRth)
  return outsiderth_;
}
inline void OrderStatusData::set_outsiderth(bool value) {
  
  outsiderth_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.outsideRth)
}

// optional bool canModify = 28;
inline void OrderStatusData::clear_canmodify() {
  canmodify_ = false;
}
inline bool OrderStatusData::canmodify() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.canModify)
  return canmodify_;
}
inline void OrderStatusData::set_canmodify(bool value) {
  
  canmodify_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.canModify)
}

// optional bool canCancel = 29;
inline void OrderStatusData::clear_cancancel() {
  cancancel_ = false;
}
inline bool OrderStatusData::cancancel() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.canCancel)
  return cancancel_;
}
inline void OrderStatusData::set_cancancel(bool value) {
  
  cancancel_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.canCancel)
}

// optional bool liquidation = 30;
inline void OrderStatusData::clear_liquidation() {
  liquidation_ = false;
}
inline bool OrderStatusData::liquidation() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.liquidation)
  return liquidation_;
}
inline void OrderStatusData::set_liquidation(bool value) {
  
  liquidation_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.liquidation)
}

// optional string name = 31;
inline void OrderStatusData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::name() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.name)
}
inline void OrderStatusData::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.name)
}
inline void OrderStatusData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.name)
}
inline ::std::string* OrderStatusData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_name() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.name)
}

// optional string source = 32;
inline void OrderStatusData::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::source() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.source)
}
inline void OrderStatusData::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.source)
}
inline void OrderStatusData::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.source)
}
inline ::std::string* OrderStatusData::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_source() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.source)
}

// optional string errorMsg = 33;
inline void OrderStatusData::clear_errormsg() {
  errormsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::errormsg() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.errorMsg)
  return errormsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_errormsg(const ::std::string& value) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.errorMsg)
}
inline void OrderStatusData::set_errormsg(const char* value) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.errorMsg)
}
inline void OrderStatusData::set_errormsg(const char* value, size_t size) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.errorMsg)
}
inline ::std::string* OrderStatusData::mutable_errormsg() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.errorMsg)
  return errormsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_errormsg() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.errorMsg)
  
  return errormsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_errormsg(::std::string* errormsg) {
  if (errormsg != NULL) {
    
  } else {
    
  }
  errormsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormsg);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.errorMsg)
}

// optional string attrDesc = 34;
inline void OrderStatusData::clear_attrdesc() {
  attrdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::attrdesc() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.attrDesc)
  return attrdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_attrdesc(const ::std::string& value) {
  
  attrdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.attrDesc)
}
inline void OrderStatusData::set_attrdesc(const char* value) {
  
  attrdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.attrDesc)
}
inline void OrderStatusData::set_attrdesc(const char* value, size_t size) {
  
  attrdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.attrDesc)
}
inline ::std::string* OrderStatusData::mutable_attrdesc() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.attrDesc)
  return attrdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_attrdesc() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.attrDesc)
  
  return attrdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_attrdesc(::std::string* attrdesc) {
  if (attrdesc != NULL) {
    
  } else {
    
  }
  attrdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attrdesc);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.attrDesc)
}

// optional float commissionAndFee = 35;
inline void OrderStatusData::clear_commissionandfee() {
  commissionandfee_ = 0;
}
inline float OrderStatusData::commissionandfee() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.commissionAndFee)
  return commissionandfee_;
}
inline void OrderStatusData::set_commissionandfee(float value) {
  
  commissionandfee_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.commissionAndFee)
}

// optional uint64 openTime = 36;
inline void OrderStatusData::clear_opentime() {
  opentime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrderStatusData::opentime() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.openTime)
  return opentime_;
}
inline void OrderStatusData::set_opentime(::google::protobuf::uint64 value) {
  
  opentime_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.openTime)
}

// optional uint64 timestamp = 37;
inline void OrderStatusData::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrderStatusData::timestamp() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.timestamp)
  return timestamp_;
}
inline void OrderStatusData::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.timestamp)
}

// optional string userMark = 38;
inline void OrderStatusData::clear_usermark() {
  usermark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStatusData::usermark() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.userMark)
  return usermark_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_usermark(const ::std::string& value) {
  
  usermark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.userMark)
}
inline void OrderStatusData::set_usermark(const char* value) {
  
  usermark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.userMark)
}
inline void OrderStatusData::set_usermark(const char* value, size_t size) {
  
  usermark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.userMark)
}
inline ::std::string* OrderStatusData::mutable_usermark() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.userMark)
  return usermark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStatusData::release_usermark() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.userMark)
  
  return usermark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStatusData::set_allocated_usermark(::std::string* usermark) {
  if (usermark != NULL) {
    
  } else {
    
  }
  usermark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usermark);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.userMark)
}

// optional double totalCashAmount = 39;
inline void OrderStatusData::clear_totalcashamount() {
  totalcashamount_ = 0;
}
inline double OrderStatusData::totalcashamount() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.totalCashAmount)
  return totalcashamount_;
}
inline void OrderStatusData::set_totalcashamount(double value) {
  
  totalcashamount_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.totalCashAmount)
}

// optional double filledCashAmount = 40;
inline void OrderStatusData::clear_filledcashamount() {
  filledcashamount_ = 0;
}
inline double OrderStatusData::filledcashamount() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.filledCashAmount)
  return filledcashamount_;
}
inline void OrderStatusData::set_filledcashamount(double value) {
  
  filledcashamount_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.filledCashAmount)
}

// optional double gst = 41;
inline void OrderStatusData::clear_gst() {
  gst_ = 0;
}
inline double OrderStatusData::gst() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.gst)
  return gst_;
}
inline void OrderStatusData::set_gst(double value) {
  
  gst_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.gst)
}

inline const OrderStatusData* OrderStatusData::internal_default_instance() {
  return &OrderStatusData_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace push
}  // namespace tigeropen

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_OrderStatusData_2eproto__INCLUDED
