// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: QuoteDepthData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "QuoteDepthData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tigeropen {
namespace push {
namespace pb {

namespace {

const ::google::protobuf::Descriptor* QuoteDepthData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteDepthData_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuoteDepthData_OrderBook_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuoteDepthData_OrderBook_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_QuoteDepthData_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_QuoteDepthData_2eproto() {
  protobuf_AddDesc_QuoteDepthData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "QuoteDepthData.proto");
  GOOGLE_CHECK(file != NULL);
  QuoteDepthData_descriptor_ = file->message_type(0);
  static const int QuoteDepthData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDepthData, symbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDepthData, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDepthData, ask_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDepthData, bid_),
  };
  QuoteDepthData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteDepthData_descriptor_,
      QuoteDepthData::internal_default_instance(),
      QuoteDepthData_offsets_,
      -1,
      -1,
      -1,
      sizeof(QuoteDepthData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDepthData, _internal_metadata_));
  QuoteDepthData_OrderBook_descriptor_ = QuoteDepthData_descriptor_->nested_type(0);
  static const int QuoteDepthData_OrderBook_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDepthData_OrderBook, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDepthData_OrderBook, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDepthData_OrderBook, ordercount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDepthData_OrderBook, exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDepthData_OrderBook, time_),
  };
  QuoteDepthData_OrderBook_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuoteDepthData_OrderBook_descriptor_,
      QuoteDepthData_OrderBook::internal_default_instance(),
      QuoteDepthData_OrderBook_offsets_,
      -1,
      -1,
      -1,
      sizeof(QuoteDepthData_OrderBook),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuoteDepthData_OrderBook, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_QuoteDepthData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteDepthData_descriptor_, QuoteDepthData::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuoteDepthData_OrderBook_descriptor_, QuoteDepthData_OrderBook::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_QuoteDepthData_2eproto() {
  QuoteDepthData_default_instance_.Shutdown();
  delete QuoteDepthData_reflection_;
  QuoteDepthData_OrderBook_default_instance_.Shutdown();
  delete QuoteDepthData_OrderBook_reflection_;
}

void protobuf_InitDefaults_QuoteDepthData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  QuoteDepthData_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  QuoteDepthData_OrderBook_default_instance_.DefaultConstruct();
  QuoteDepthData_default_instance_.get_mutable()->InitAsDefaultInstance();
  QuoteDepthData_OrderBook_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_QuoteDepthData_2eproto_once_);
void protobuf_InitDefaults_QuoteDepthData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_QuoteDepthData_2eproto_once_,
                 &protobuf_InitDefaults_QuoteDepthData_2eproto_impl);
}
void protobuf_AddDesc_QuoteDepthData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_QuoteDepthData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024QuoteDepthData.proto\022\021tigeropen.push.p"
    "b\"\207\002\n\016QuoteDepthData\022\016\n\006symbol\030\001 \001(\t\022\021\n\t"
    "timestamp\030\002 \001(\004\0228\n\003ask\030\003 \001(\0132+.tigeropen"
    ".push.pb.QuoteDepthData.OrderBook\0228\n\003bid"
    "\030\004 \001(\0132+.tigeropen.push.pb.QuoteDepthDat"
    "a.OrderBook\032^\n\tOrderBook\022\r\n\005price\030\001 \003(\001\022"
    "\016\n\006volume\030\002 \003(\022\022\022\n\norderCount\030\003 \003(\r\022\020\n\010e"
    "xchange\030\004 \003(\t\022\014\n\004time\030\005 \003(\022b\006proto3", 315);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "QuoteDepthData.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_QuoteDepthData_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_QuoteDepthData_2eproto_once_);
void protobuf_AddDesc_QuoteDepthData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_QuoteDepthData_2eproto_once_,
                 &protobuf_AddDesc_QuoteDepthData_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_QuoteDepthData_2eproto {
  StaticDescriptorInitializer_QuoteDepthData_2eproto() {
    protobuf_AddDesc_QuoteDepthData_2eproto();
  }
} static_descriptor_initializer_QuoteDepthData_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteDepthData_OrderBook::kPriceFieldNumber;
const int QuoteDepthData_OrderBook::kVolumeFieldNumber;
const int QuoteDepthData_OrderBook::kOrderCountFieldNumber;
const int QuoteDepthData_OrderBook::kExchangeFieldNumber;
const int QuoteDepthData_OrderBook::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteDepthData_OrderBook::QuoteDepthData_OrderBook()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_QuoteDepthData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tigeropen.push.pb.QuoteDepthData.OrderBook)
}

void QuoteDepthData_OrderBook::InitAsDefaultInstance() {
}

QuoteDepthData_OrderBook::QuoteDepthData_OrderBook(const QuoteDepthData_OrderBook& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tigeropen.push.pb.QuoteDepthData.OrderBook)
}

void QuoteDepthData_OrderBook::SharedCtor() {
  _cached_size_ = 0;
}

QuoteDepthData_OrderBook::~QuoteDepthData_OrderBook() {
  // @@protoc_insertion_point(destructor:tigeropen.push.pb.QuoteDepthData.OrderBook)
  SharedDtor();
}

void QuoteDepthData_OrderBook::SharedDtor() {
}

void QuoteDepthData_OrderBook::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteDepthData_OrderBook::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteDepthData_OrderBook_descriptor_;
}

const QuoteDepthData_OrderBook& QuoteDepthData_OrderBook::default_instance() {
  protobuf_InitDefaults_QuoteDepthData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QuoteDepthData_OrderBook> QuoteDepthData_OrderBook_default_instance_;

QuoteDepthData_OrderBook* QuoteDepthData_OrderBook::New(::google::protobuf::Arena* arena) const {
  QuoteDepthData_OrderBook* n = new QuoteDepthData_OrderBook;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteDepthData_OrderBook::Clear() {
// @@protoc_insertion_point(message_clear_start:tigeropen.push.pb.QuoteDepthData.OrderBook)
  price_.Clear();
  volume_.Clear();
  ordercount_.Clear();
  exchange_.Clear();
  time_.Clear();
}

bool QuoteDepthData_OrderBook::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tigeropen.push.pb.QuoteDepthData.OrderBook)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double price = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_price())));
        } else if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10, input, this->mutable_price())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_volume;
        break;
      }

      // repeated sint64 volume = 2;
      case 2: {
        if (tag == 18) {
         parse_volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_volume())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18, input, this->mutable_volume())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_orderCount;
        break;
      }

      // repeated uint32 orderCount = 3;
      case 3: {
        if (tag == 26) {
         parse_orderCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ordercount())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26, input, this->mutable_ordercount())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_exchange;
        break;
      }

      // repeated string exchange = 4;
      case 4: {
        if (tag == 34) {
         parse_exchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_exchange()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange(this->exchange_size() - 1).data(),
            this->exchange(this->exchange_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.QuoteDepthData.OrderBook.exchange"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_exchange;
        if (input->ExpectTag(42)) goto parse_time;
        break;
      }

      // repeated sint64 time = 5;
      case 5: {
        if (tag == 42) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_time())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 42, input, this->mutable_time())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tigeropen.push.pb.QuoteDepthData.OrderBook)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tigeropen.push.pb.QuoteDepthData.OrderBook)
  return false;
#undef DO_
}

void QuoteDepthData_OrderBook::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tigeropen.push.pb.QuoteDepthData.OrderBook)
  // repeated double price = 1;
  if (this->price_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_price_cached_byte_size_);
  }
  for (int i = 0; i < this->price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->price(i), output);
  }

  // repeated sint64 volume = 2;
  if (this->volume_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_volume_cached_byte_size_);
  }
  for (int i = 0; i < this->volume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->volume(i), output);
  }

  // repeated uint32 orderCount = 3;
  if (this->ordercount_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_ordercount_cached_byte_size_);
  }
  for (int i = 0; i < this->ordercount_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->ordercount(i), output);
  }

  // repeated string exchange = 4;
  for (int i = 0; i < this->exchange_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange(i).data(), this->exchange(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.QuoteDepthData.OrderBook.exchange");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->exchange(i), output);
  }

  // repeated sint64 time = 5;
  if (this->time_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_time_cached_byte_size_);
  }
  for (int i = 0; i < this->time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->time(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tigeropen.push.pb.QuoteDepthData.OrderBook)
}

::google::protobuf::uint8* QuoteDepthData_OrderBook::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tigeropen.push.pb.QuoteDepthData.OrderBook)
  // repeated double price = 1;
  if (this->price_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _price_cached_byte_size_, target);
  }
  for (int i = 0; i < this->price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->price(i), target);
  }

  // repeated sint64 volume = 2;
  if (this->volume_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _volume_cached_byte_size_, target);
  }
  for (int i = 0; i < this->volume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->volume(i), target);
  }

  // repeated uint32 orderCount = 3;
  if (this->ordercount_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _ordercount_cached_byte_size_, target);
  }
  for (int i = 0; i < this->ordercount_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->ordercount(i), target);
  }

  // repeated string exchange = 4;
  for (int i = 0; i < this->exchange_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange(i).data(), this->exchange(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.QuoteDepthData.OrderBook.exchange");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->exchange(i), target);
  }

  // repeated sint64 time = 5;
  if (this->time_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _time_cached_byte_size_, target);
  }
  for (int i = 0; i < this->time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->time(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tigeropen.push.pb.QuoteDepthData.OrderBook)
  return target;
}

size_t QuoteDepthData_OrderBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tigeropen.push.pb.QuoteDepthData.OrderBook)
  size_t total_size = 0;

  // repeated double price = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->price_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _price_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 volume = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->volume_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->volume(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _volume_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 orderCount = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->ordercount_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ordercount(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ordercount_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string exchange = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->exchange_size());
  for (int i = 0; i < this->exchange_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->exchange(i));
  }

  // repeated sint64 time = 5;
  {
    size_t data_size = 0;
    unsigned int count = this->time_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->time(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _time_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteDepthData_OrderBook::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tigeropen.push.pb.QuoteDepthData.OrderBook)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteDepthData_OrderBook* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteDepthData_OrderBook>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tigeropen.push.pb.QuoteDepthData.OrderBook)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tigeropen.push.pb.QuoteDepthData.OrderBook)
    UnsafeMergeFrom(*source);
  }
}

void QuoteDepthData_OrderBook::MergeFrom(const QuoteDepthData_OrderBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tigeropen.push.pb.QuoteDepthData.OrderBook)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QuoteDepthData_OrderBook::UnsafeMergeFrom(const QuoteDepthData_OrderBook& from) {
  GOOGLE_DCHECK(&from != this);
  price_.UnsafeMergeFrom(from.price_);
  volume_.UnsafeMergeFrom(from.volume_);
  ordercount_.UnsafeMergeFrom(from.ordercount_);
  exchange_.UnsafeMergeFrom(from.exchange_);
  time_.UnsafeMergeFrom(from.time_);
}

void QuoteDepthData_OrderBook::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tigeropen.push.pb.QuoteDepthData.OrderBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteDepthData_OrderBook::CopyFrom(const QuoteDepthData_OrderBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tigeropen.push.pb.QuoteDepthData.OrderBook)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QuoteDepthData_OrderBook::IsInitialized() const {

  return true;
}

void QuoteDepthData_OrderBook::Swap(QuoteDepthData_OrderBook* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteDepthData_OrderBook::InternalSwap(QuoteDepthData_OrderBook* other) {
  price_.UnsafeArenaSwap(&other->price_);
  volume_.UnsafeArenaSwap(&other->volume_);
  ordercount_.UnsafeArenaSwap(&other->ordercount_);
  exchange_.UnsafeArenaSwap(&other->exchange_);
  time_.UnsafeArenaSwap(&other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteDepthData_OrderBook::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteDepthData_OrderBook_descriptor_;
  metadata.reflection = QuoteDepthData_OrderBook_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteDepthData::kSymbolFieldNumber;
const int QuoteDepthData::kTimestampFieldNumber;
const int QuoteDepthData::kAskFieldNumber;
const int QuoteDepthData::kBidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteDepthData::QuoteDepthData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_QuoteDepthData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tigeropen.push.pb.QuoteDepthData)
}

void QuoteDepthData::InitAsDefaultInstance() {
  ask_ = const_cast< ::tigeropen::push::pb::QuoteDepthData_OrderBook*>(
      ::tigeropen::push::pb::QuoteDepthData_OrderBook::internal_default_instance());
  bid_ = const_cast< ::tigeropen::push::pb::QuoteDepthData_OrderBook*>(
      ::tigeropen::push::pb::QuoteDepthData_OrderBook::internal_default_instance());
}

QuoteDepthData::QuoteDepthData(const QuoteDepthData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tigeropen.push.pb.QuoteDepthData)
}

void QuoteDepthData::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ask_ = NULL;
  bid_ = NULL;
  timestamp_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

QuoteDepthData::~QuoteDepthData() {
  // @@protoc_insertion_point(destructor:tigeropen.push.pb.QuoteDepthData)
  SharedDtor();
}

void QuoteDepthData::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &QuoteDepthData_default_instance_.get()) {
    delete ask_;
    delete bid_;
  }
}

void QuoteDepthData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteDepthData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuoteDepthData_descriptor_;
}

const QuoteDepthData& QuoteDepthData::default_instance() {
  protobuf_InitDefaults_QuoteDepthData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QuoteDepthData> QuoteDepthData_default_instance_;

QuoteDepthData* QuoteDepthData::New(::google::protobuf::Arena* arena) const {
  QuoteDepthData* n = new QuoteDepthData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteDepthData::Clear() {
// @@protoc_insertion_point(message_clear_start:tigeropen.push.pb.QuoteDepthData)
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
  if (GetArenaNoVirtual() == NULL && ask_ != NULL) delete ask_;
  ask_ = NULL;
  if (GetArenaNoVirtual() == NULL && bid_ != NULL) delete bid_;
  bid_ = NULL;
}

bool QuoteDepthData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tigeropen.push.pb.QuoteDepthData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string symbol = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.QuoteDepthData.symbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timestamp;
        break;
      }

      // optional uint64 timestamp = 2;
      case 2: {
        if (tag == 16) {
         parse_timestamp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ask;
        break;
      }

      // optional .tigeropen.push.pb.QuoteDepthData.OrderBook ask = 3;
      case 3: {
        if (tag == 26) {
         parse_ask:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ask()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_bid;
        break;
      }

      // optional .tigeropen.push.pb.QuoteDepthData.OrderBook bid = 4;
      case 4: {
        if (tag == 34) {
         parse_bid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tigeropen.push.pb.QuoteDepthData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tigeropen.push.pb.QuoteDepthData)
  return false;
#undef DO_
}

void QuoteDepthData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tigeropen.push.pb.QuoteDepthData)
  // optional string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.QuoteDepthData.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // optional uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp(), output);
  }

  // optional .tigeropen.push.pb.QuoteDepthData.OrderBook ask = 3;
  if (this->has_ask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ask_, output);
  }

  // optional .tigeropen.push.pb.QuoteDepthData.OrderBook bid = 4;
  if (this->has_bid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->bid_, output);
  }

  // @@protoc_insertion_point(serialize_end:tigeropen.push.pb.QuoteDepthData)
}

::google::protobuf::uint8* QuoteDepthData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tigeropen.push.pb.QuoteDepthData)
  // optional string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.QuoteDepthData.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // optional uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timestamp(), target);
  }

  // optional .tigeropen.push.pb.QuoteDepthData.OrderBook ask = 3;
  if (this->has_ask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ask_, false, target);
  }

  // optional .tigeropen.push.pb.QuoteDepthData.OrderBook bid = 4;
  if (this->has_bid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->bid_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tigeropen.push.pb.QuoteDepthData)
  return target;
}

size_t QuoteDepthData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tigeropen.push.pb.QuoteDepthData)
  size_t total_size = 0;

  // optional string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // optional uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // optional .tigeropen.push.pb.QuoteDepthData.OrderBook ask = 3;
  if (this->has_ask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ask_);
  }

  // optional .tigeropen.push.pb.QuoteDepthData.OrderBook bid = 4;
  if (this->has_bid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bid_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteDepthData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tigeropen.push.pb.QuoteDepthData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuoteDepthData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteDepthData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tigeropen.push.pb.QuoteDepthData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tigeropen.push.pb.QuoteDepthData)
    UnsafeMergeFrom(*source);
  }
}

void QuoteDepthData::MergeFrom(const QuoteDepthData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tigeropen.push.pb.QuoteDepthData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QuoteDepthData::UnsafeMergeFrom(const QuoteDepthData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.has_ask()) {
    mutable_ask()->::tigeropen::push::pb::QuoteDepthData_OrderBook::MergeFrom(from.ask());
  }
  if (from.has_bid()) {
    mutable_bid()->::tigeropen::push::pb::QuoteDepthData_OrderBook::MergeFrom(from.bid());
  }
}

void QuoteDepthData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tigeropen.push.pb.QuoteDepthData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteDepthData::CopyFrom(const QuoteDepthData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tigeropen.push.pb.QuoteDepthData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QuoteDepthData::IsInitialized() const {

  return true;
}

void QuoteDepthData::Swap(QuoteDepthData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteDepthData::InternalSwap(QuoteDepthData* other) {
  symbol_.Swap(&other->symbol_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(ask_, other->ask_);
  std::swap(bid_, other->bid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteDepthData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuoteDepthData_descriptor_;
  metadata.reflection = QuoteDepthData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuoteDepthData_OrderBook

// repeated double price = 1;
int QuoteDepthData_OrderBook::price_size() const {
  return price_.size();
}
void QuoteDepthData_OrderBook::clear_price() {
  price_.Clear();
}
double QuoteDepthData_OrderBook::price(int index) const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.QuoteDepthData.OrderBook.price)
  return price_.Get(index);
}
void QuoteDepthData_OrderBook::set_price(int index, double value) {
  price_.Set(index, value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.QuoteDepthData.OrderBook.price)
}
void QuoteDepthData_OrderBook::add_price(double value) {
  price_.Add(value);
  // @@protoc_insertion_point(field_add:tigeropen.push.pb.QuoteDepthData.OrderBook.price)
}
const ::google::protobuf::RepeatedField< double >&
QuoteDepthData_OrderBook::price() const {
  // @@protoc_insertion_point(field_list:tigeropen.push.pb.QuoteDepthData.OrderBook.price)
  return price_;
}
::google::protobuf::RepeatedField< double >*
QuoteDepthData_OrderBook::mutable_price() {
  // @@protoc_insertion_point(field_mutable_list:tigeropen.push.pb.QuoteDepthData.OrderBook.price)
  return &price_;
}

// repeated sint64 volume = 2;
int QuoteDepthData_OrderBook::volume_size() const {
  return volume_.size();
}
void QuoteDepthData_OrderBook::clear_volume() {
  volume_.Clear();
}
::google::protobuf::int64 QuoteDepthData_OrderBook::volume(int index) const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.QuoteDepthData.OrderBook.volume)
  return volume_.Get(index);
}
void QuoteDepthData_OrderBook::set_volume(int index, ::google::protobuf::int64 value) {
  volume_.Set(index, value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.QuoteDepthData.OrderBook.volume)
}
void QuoteDepthData_OrderBook::add_volume(::google::protobuf::int64 value) {
  volume_.Add(value);
  // @@protoc_insertion_point(field_add:tigeropen.push.pb.QuoteDepthData.OrderBook.volume)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
QuoteDepthData_OrderBook::volume() const {
  // @@protoc_insertion_point(field_list:tigeropen.push.pb.QuoteDepthData.OrderBook.volume)
  return volume_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
QuoteDepthData_OrderBook::mutable_volume() {
  // @@protoc_insertion_point(field_mutable_list:tigeropen.push.pb.QuoteDepthData.OrderBook.volume)
  return &volume_;
}

// repeated uint32 orderCount = 3;
int QuoteDepthData_OrderBook::ordercount_size() const {
  return ordercount_.size();
}
void QuoteDepthData_OrderBook::clear_ordercount() {
  ordercount_.Clear();
}
::google::protobuf::uint32 QuoteDepthData_OrderBook::ordercount(int index) const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.QuoteDepthData.OrderBook.orderCount)
  return ordercount_.Get(index);
}
void QuoteDepthData_OrderBook::set_ordercount(int index, ::google::protobuf::uint32 value) {
  ordercount_.Set(index, value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.QuoteDepthData.OrderBook.orderCount)
}
void QuoteDepthData_OrderBook::add_ordercount(::google::protobuf::uint32 value) {
  ordercount_.Add(value);
  // @@protoc_insertion_point(field_add:tigeropen.push.pb.QuoteDepthData.OrderBook.orderCount)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QuoteDepthData_OrderBook::ordercount() const {
  // @@protoc_insertion_point(field_list:tigeropen.push.pb.QuoteDepthData.OrderBook.orderCount)
  return ordercount_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QuoteDepthData_OrderBook::mutable_ordercount() {
  // @@protoc_insertion_point(field_mutable_list:tigeropen.push.pb.QuoteDepthData.OrderBook.orderCount)
  return &ordercount_;
}

// repeated string exchange = 4;
int QuoteDepthData_OrderBook::exchange_size() const {
  return exchange_.size();
}
void QuoteDepthData_OrderBook::clear_exchange() {
  exchange_.Clear();
}
const ::std::string& QuoteDepthData_OrderBook::exchange(int index) const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.QuoteDepthData.OrderBook.exchange)
  return exchange_.Get(index);
}
::std::string* QuoteDepthData_OrderBook::mutable_exchange(int index) {
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.QuoteDepthData.OrderBook.exchange)
  return exchange_.Mutable(index);
}
void QuoteDepthData_OrderBook::set_exchange(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.QuoteDepthData.OrderBook.exchange)
  exchange_.Mutable(index)->assign(value);
}
void QuoteDepthData_OrderBook::set_exchange(int index, const char* value) {
  exchange_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.QuoteDepthData.OrderBook.exchange)
}
void QuoteDepthData_OrderBook::set_exchange(int index, const char* value, size_t size) {
  exchange_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.QuoteDepthData.OrderBook.exchange)
}
::std::string* QuoteDepthData_OrderBook::add_exchange() {
  // @@protoc_insertion_point(field_add_mutable:tigeropen.push.pb.QuoteDepthData.OrderBook.exchange)
  return exchange_.Add();
}
void QuoteDepthData_OrderBook::add_exchange(const ::std::string& value) {
  exchange_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tigeropen.push.pb.QuoteDepthData.OrderBook.exchange)
}
void QuoteDepthData_OrderBook::add_exchange(const char* value) {
  exchange_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tigeropen.push.pb.QuoteDepthData.OrderBook.exchange)
}
void QuoteDepthData_OrderBook::add_exchange(const char* value, size_t size) {
  exchange_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tigeropen.push.pb.QuoteDepthData.OrderBook.exchange)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
QuoteDepthData_OrderBook::exchange() const {
  // @@protoc_insertion_point(field_list:tigeropen.push.pb.QuoteDepthData.OrderBook.exchange)
  return exchange_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
QuoteDepthData_OrderBook::mutable_exchange() {
  // @@protoc_insertion_point(field_mutable_list:tigeropen.push.pb.QuoteDepthData.OrderBook.exchange)
  return &exchange_;
}

// repeated sint64 time = 5;
int QuoteDepthData_OrderBook::time_size() const {
  return time_.size();
}
void QuoteDepthData_OrderBook::clear_time() {
  time_.Clear();
}
::google::protobuf::int64 QuoteDepthData_OrderBook::time(int index) const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.QuoteDepthData.OrderBook.time)
  return time_.Get(index);
}
void QuoteDepthData_OrderBook::set_time(int index, ::google::protobuf::int64 value) {
  time_.Set(index, value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.QuoteDepthData.OrderBook.time)
}
void QuoteDepthData_OrderBook::add_time(::google::protobuf::int64 value) {
  time_.Add(value);
  // @@protoc_insertion_point(field_add:tigeropen.push.pb.QuoteDepthData.OrderBook.time)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
QuoteDepthData_OrderBook::time() const {
  // @@protoc_insertion_point(field_list:tigeropen.push.pb.QuoteDepthData.OrderBook.time)
  return time_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
QuoteDepthData_OrderBook::mutable_time() {
  // @@protoc_insertion_point(field_mutable_list:tigeropen.push.pb.QuoteDepthData.OrderBook.time)
  return &time_;
}

inline const QuoteDepthData_OrderBook* QuoteDepthData_OrderBook::internal_default_instance() {
  return &QuoteDepthData_OrderBook_default_instance_.get();
}
// -------------------------------------------------------------------

// QuoteDepthData

// optional string symbol = 1;
void QuoteDepthData::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QuoteDepthData::symbol() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.QuoteDepthData.symbol)
  return symbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QuoteDepthData::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.QuoteDepthData.symbol)
}
void QuoteDepthData::set_symbol(const char* value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.QuoteDepthData.symbol)
}
void QuoteDepthData::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.QuoteDepthData.symbol)
}
::std::string* QuoteDepthData::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.QuoteDepthData.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QuoteDepthData::release_symbol() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.QuoteDepthData.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QuoteDepthData::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.QuoteDepthData.symbol)
}

// optional uint64 timestamp = 2;
void QuoteDepthData::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 QuoteDepthData::timestamp() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.QuoteDepthData.timestamp)
  return timestamp_;
}
void QuoteDepthData::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.QuoteDepthData.timestamp)
}

// optional .tigeropen.push.pb.QuoteDepthData.OrderBook ask = 3;
bool QuoteDepthData::has_ask() const {
  return this != internal_default_instance() && ask_ != NULL;
}
void QuoteDepthData::clear_ask() {
  if (GetArenaNoVirtual() == NULL && ask_ != NULL) delete ask_;
  ask_ = NULL;
}
const ::tigeropen::push::pb::QuoteDepthData_OrderBook& QuoteDepthData::ask() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.QuoteDepthData.ask)
  return ask_ != NULL ? *ask_
                         : *::tigeropen::push::pb::QuoteDepthData_OrderBook::internal_default_instance();
}
::tigeropen::push::pb::QuoteDepthData_OrderBook* QuoteDepthData::mutable_ask() {
  
  if (ask_ == NULL) {
    ask_ = new ::tigeropen::push::pb::QuoteDepthData_OrderBook;
  }
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.QuoteDepthData.ask)
  return ask_;
}
::tigeropen::push::pb::QuoteDepthData_OrderBook* QuoteDepthData::release_ask() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.QuoteDepthData.ask)
  
  ::tigeropen::push::pb::QuoteDepthData_OrderBook* temp = ask_;
  ask_ = NULL;
  return temp;
}
void QuoteDepthData::set_allocated_ask(::tigeropen::push::pb::QuoteDepthData_OrderBook* ask) {
  delete ask_;
  ask_ = ask;
  if (ask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.QuoteDepthData.ask)
}

// optional .tigeropen.push.pb.QuoteDepthData.OrderBook bid = 4;
bool QuoteDepthData::has_bid() const {
  return this != internal_default_instance() && bid_ != NULL;
}
void QuoteDepthData::clear_bid() {
  if (GetArenaNoVirtual() == NULL && bid_ != NULL) delete bid_;
  bid_ = NULL;
}
const ::tigeropen::push::pb::QuoteDepthData_OrderBook& QuoteDepthData::bid() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.QuoteDepthData.bid)
  return bid_ != NULL ? *bid_
                         : *::tigeropen::push::pb::QuoteDepthData_OrderBook::internal_default_instance();
}
::tigeropen::push::pb::QuoteDepthData_OrderBook* QuoteDepthData::mutable_bid() {
  
  if (bid_ == NULL) {
    bid_ = new ::tigeropen::push::pb::QuoteDepthData_OrderBook;
  }
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.QuoteDepthData.bid)
  return bid_;
}
::tigeropen::push::pb::QuoteDepthData_OrderBook* QuoteDepthData::release_bid() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.QuoteDepthData.bid)
  
  ::tigeropen::push::pb::QuoteDepthData_OrderBook* temp = bid_;
  bid_ = NULL;
  return temp;
}
void QuoteDepthData::set_allocated_bid(::tigeropen::push::pb::QuoteDepthData_OrderBook* bid) {
  delete bid_;
  bid_ = bid;
  if (bid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.QuoteDepthData.bid)
}

inline const QuoteDepthData* QuoteDepthData::internal_default_instance() {
  return &QuoteDepthData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace push
}  // namespace tigeropen

// @@protoc_insertion_point(global_scope)
