// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderTransactionData.proto

#ifndef PROTOBUF_OrderTransactionData_2eproto__INCLUDED
#define PROTOBUF_OrderTransactionData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tigeropen {
namespace push {
namespace pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_OrderTransactionData_2eproto();
void protobuf_InitDefaults_OrderTransactionData_2eproto();
void protobuf_AssignDesc_OrderTransactionData_2eproto();
void protobuf_ShutdownFile_OrderTransactionData_2eproto();

class OrderTransactionData;

// ===================================================================

class OrderTransactionData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tigeropen.push.pb.OrderTransactionData) */ {
 public:
  OrderTransactionData();
  virtual ~OrderTransactionData();

  OrderTransactionData(const OrderTransactionData& from);

  inline OrderTransactionData& operator=(const OrderTransactionData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderTransactionData& default_instance();

  static const OrderTransactionData* internal_default_instance();

  void Swap(OrderTransactionData* other);

  // implements Message ----------------------------------------------

  inline OrderTransactionData* New() const { return New(NULL); }

  OrderTransactionData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderTransactionData& from);
  void MergeFrom(const OrderTransactionData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OrderTransactionData* other);
  void UnsafeMergeFrom(const OrderTransactionData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional sint64 orderId = 2;
  void clear_orderid();
  static const int kOrderIdFieldNumber = 2;
  ::google::protobuf::int64 orderid() const;
  void set_orderid(::google::protobuf::int64 value);

  // optional string account = 3;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string symbol = 4;
  void clear_symbol();
  static const int kSymbolFieldNumber = 4;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // optional string identifier = 5;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 5;
  const ::std::string& identifier() const;
  void set_identifier(const ::std::string& value);
  void set_identifier(const char* value);
  void set_identifier(const char* value, size_t size);
  ::std::string* mutable_identifier();
  ::std::string* release_identifier();
  void set_allocated_identifier(::std::string* identifier);

  // optional uint32 multiplier = 6;
  void clear_multiplier();
  static const int kMultiplierFieldNumber = 6;
  ::google::protobuf::uint32 multiplier() const;
  void set_multiplier(::google::protobuf::uint32 value);

  // optional string action = 7;
  void clear_action();
  static const int kActionFieldNumber = 7;
  const ::std::string& action() const;
  void set_action(const ::std::string& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  ::std::string* mutable_action();
  ::std::string* release_action();
  void set_allocated_action(::std::string* action);

  // optional string market = 8;
  void clear_market();
  static const int kMarketFieldNumber = 8;
  const ::std::string& market() const;
  void set_market(const ::std::string& value);
  void set_market(const char* value);
  void set_market(const char* value, size_t size);
  ::std::string* mutable_market();
  ::std::string* release_market();
  void set_allocated_market(::std::string* market);

  // optional string currency = 9;
  void clear_currency();
  static const int kCurrencyFieldNumber = 9;
  const ::std::string& currency() const;
  void set_currency(const ::std::string& value);
  void set_currency(const char* value);
  void set_currency(const char* value, size_t size);
  ::std::string* mutable_currency();
  ::std::string* release_currency();
  void set_allocated_currency(::std::string* currency);

  // optional string segType = 10;
  void clear_segtype();
  static const int kSegTypeFieldNumber = 10;
  const ::std::string& segtype() const;
  void set_segtype(const ::std::string& value);
  void set_segtype(const char* value);
  void set_segtype(const char* value, size_t size);
  ::std::string* mutable_segtype();
  ::std::string* release_segtype();
  void set_allocated_segtype(::std::string* segtype);

  // optional string secType = 11;
  void clear_sectype();
  static const int kSecTypeFieldNumber = 11;
  const ::std::string& sectype() const;
  void set_sectype(const ::std::string& value);
  void set_sectype(const char* value);
  void set_sectype(const char* value, size_t size);
  ::std::string* mutable_sectype();
  ::std::string* release_sectype();
  void set_allocated_sectype(::std::string* sectype);

  // optional double filledPrice = 12;
  void clear_filledprice();
  static const int kFilledPriceFieldNumber = 12;
  double filledprice() const;
  void set_filledprice(double value);

  // optional sint64 filledQuantity = 13;
  void clear_filledquantity();
  static const int kFilledQuantityFieldNumber = 13;
  ::google::protobuf::int64 filledquantity() const;
  void set_filledquantity(::google::protobuf::int64 value);

  // optional uint64 createTime = 14;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 14;
  ::google::protobuf::uint64 createtime() const;
  void set_createtime(::google::protobuf::uint64 value);

  // optional uint64 updateTime = 15;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 15;
  ::google::protobuf::uint64 updatetime() const;
  void set_updatetime(::google::protobuf::uint64 value);

  // optional uint64 transactTime = 16;
  void clear_transacttime();
  static const int kTransactTimeFieldNumber = 16;
  ::google::protobuf::uint64 transacttime() const;
  void set_transacttime(::google::protobuf::uint64 value);

  // optional uint64 timestamp = 17;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 17;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tigeropen.push.pb.OrderTransactionData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::internal::ArenaStringPtr identifier_;
  ::google::protobuf::internal::ArenaStringPtr action_;
  ::google::protobuf::internal::ArenaStringPtr market_;
  ::google::protobuf::internal::ArenaStringPtr currency_;
  ::google::protobuf::internal::ArenaStringPtr segtype_;
  ::google::protobuf::internal::ArenaStringPtr sectype_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 orderid_;
  double filledprice_;
  ::google::protobuf::int64 filledquantity_;
  ::google::protobuf::uint64 createtime_;
  ::google::protobuf::uint64 updatetime_;
  ::google::protobuf::uint64 transacttime_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 multiplier_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_OrderTransactionData_2eproto_impl();
  friend void  protobuf_AddDesc_OrderTransactionData_2eproto_impl();
  friend void protobuf_AssignDesc_OrderTransactionData_2eproto();
  friend void protobuf_ShutdownFile_OrderTransactionData_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OrderTransactionData> OrderTransactionData_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderTransactionData

// optional sint64 id = 1;
inline void OrderTransactionData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderTransactionData::id() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.id)
  return id_;
}
inline void OrderTransactionData::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.id)
}

// optional sint64 orderId = 2;
inline void OrderTransactionData::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderTransactionData::orderid() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.orderId)
  return orderid_;
}
inline void OrderTransactionData::set_orderid(::google::protobuf::int64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.orderId)
}

// optional string account = 3;
inline void OrderTransactionData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderTransactionData::account() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.account)
}
inline void OrderTransactionData::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.account)
}
inline void OrderTransactionData::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.account)
}
inline ::std::string* OrderTransactionData::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderTransactionData::release_account() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.account)
}

// optional string symbol = 4;
inline void OrderTransactionData::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderTransactionData::symbol() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.symbol)
  return symbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.symbol)
}
inline void OrderTransactionData::set_symbol(const char* value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.symbol)
}
inline void OrderTransactionData::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.symbol)
}
inline ::std::string* OrderTransactionData::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderTransactionData::release_symbol() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.symbol)
}

// optional string identifier = 5;
inline void OrderTransactionData::clear_identifier() {
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderTransactionData::identifier() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.identifier)
  return identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_identifier(const ::std::string& value) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.identifier)
}
inline void OrderTransactionData::set_identifier(const char* value) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.identifier)
}
inline void OrderTransactionData::set_identifier(const char* value, size_t size) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.identifier)
}
inline ::std::string* OrderTransactionData::mutable_identifier() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.identifier)
  return identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderTransactionData::release_identifier() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.identifier)
  
  return identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_allocated_identifier(::std::string* identifier) {
  if (identifier != NULL) {
    
  } else {
    
  }
  identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifier);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.identifier)
}

// optional uint32 multiplier = 6;
inline void OrderTransactionData::clear_multiplier() {
  multiplier_ = 0u;
}
inline ::google::protobuf::uint32 OrderTransactionData::multiplier() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.multiplier)
  return multiplier_;
}
inline void OrderTransactionData::set_multiplier(::google::protobuf::uint32 value) {
  
  multiplier_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.multiplier)
}

// optional string action = 7;
inline void OrderTransactionData::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderTransactionData::action() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.action)
  return action_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.action)
}
inline void OrderTransactionData::set_action(const char* value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.action)
}
inline void OrderTransactionData::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.action)
}
inline ::std::string* OrderTransactionData::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderTransactionData::release_action() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.action)
}

// optional string market = 8;
inline void OrderTransactionData::clear_market() {
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderTransactionData::market() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.market)
  return market_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_market(const ::std::string& value) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.market)
}
inline void OrderTransactionData::set_market(const char* value) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.market)
}
inline void OrderTransactionData::set_market(const char* value, size_t size) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.market)
}
inline ::std::string* OrderTransactionData::mutable_market() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.market)
  return market_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderTransactionData::release_market() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.market)
  
  return market_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_allocated_market(::std::string* market) {
  if (market != NULL) {
    
  } else {
    
  }
  market_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), market);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.market)
}

// optional string currency = 9;
inline void OrderTransactionData::clear_currency() {
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderTransactionData::currency() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.currency)
  return currency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_currency(const ::std::string& value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.currency)
}
inline void OrderTransactionData::set_currency(const char* value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.currency)
}
inline void OrderTransactionData::set_currency(const char* value, size_t size) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.currency)
}
inline ::std::string* OrderTransactionData::mutable_currency() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.currency)
  return currency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderTransactionData::release_currency() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.currency)
  
  return currency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_allocated_currency(::std::string* currency) {
  if (currency != NULL) {
    
  } else {
    
  }
  currency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.currency)
}

// optional string segType = 10;
inline void OrderTransactionData::clear_segtype() {
  segtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderTransactionData::segtype() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.segType)
  return segtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_segtype(const ::std::string& value) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.segType)
}
inline void OrderTransactionData::set_segtype(const char* value) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.segType)
}
inline void OrderTransactionData::set_segtype(const char* value, size_t size) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.segType)
}
inline ::std::string* OrderTransactionData::mutable_segtype() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.segType)
  return segtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderTransactionData::release_segtype() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.segType)
  
  return segtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_allocated_segtype(::std::string* segtype) {
  if (segtype != NULL) {
    
  } else {
    
  }
  segtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segtype);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.segType)
}

// optional string secType = 11;
inline void OrderTransactionData::clear_sectype() {
  sectype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderTransactionData::sectype() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.secType)
  return sectype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_sectype(const ::std::string& value) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.secType)
}
inline void OrderTransactionData::set_sectype(const char* value) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.secType)
}
inline void OrderTransactionData::set_sectype(const char* value, size_t size) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.secType)
}
inline ::std::string* OrderTransactionData::mutable_sectype() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.secType)
  return sectype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderTransactionData::release_sectype() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.secType)
  
  return sectype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderTransactionData::set_allocated_sectype(::std::string* sectype) {
  if (sectype != NULL) {
    
  } else {
    
  }
  sectype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sectype);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.secType)
}

// optional double filledPrice = 12;
inline void OrderTransactionData::clear_filledprice() {
  filledprice_ = 0;
}
inline double OrderTransactionData::filledprice() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.filledPrice)
  return filledprice_;
}
inline void OrderTransactionData::set_filledprice(double value) {
  
  filledprice_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.filledPrice)
}

// optional sint64 filledQuantity = 13;
inline void OrderTransactionData::clear_filledquantity() {
  filledquantity_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderTransactionData::filledquantity() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.filledQuantity)
  return filledquantity_;
}
inline void OrderTransactionData::set_filledquantity(::google::protobuf::int64 value) {
  
  filledquantity_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.filledQuantity)
}

// optional uint64 createTime = 14;
inline void OrderTransactionData::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrderTransactionData::createtime() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.createTime)
  return createtime_;
}
inline void OrderTransactionData::set_createtime(::google::protobuf::uint64 value) {
  
  createtime_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.createTime)
}

// optional uint64 updateTime = 15;
inline void OrderTransactionData::clear_updatetime() {
  updatetime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrderTransactionData::updatetime() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.updateTime)
  return updatetime_;
}
inline void OrderTransactionData::set_updatetime(::google::protobuf::uint64 value) {
  
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.updateTime)
}

// optional uint64 transactTime = 16;
inline void OrderTransactionData::clear_transacttime() {
  transacttime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrderTransactionData::transacttime() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.transactTime)
  return transacttime_;
}
inline void OrderTransactionData::set_transacttime(::google::protobuf::uint64 value) {
  
  transacttime_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.transactTime)
}

// optional uint64 timestamp = 17;
inline void OrderTransactionData::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrderTransactionData::timestamp() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.timestamp)
  return timestamp_;
}
inline void OrderTransactionData::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.timestamp)
}

inline const OrderTransactionData* OrderTransactionData::internal_default_instance() {
  return &OrderTransactionData_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace push
}  // namespace tigeropen

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_OrderTransactionData_2eproto__INCLUDED
