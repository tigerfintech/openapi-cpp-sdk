// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderTransactionData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "OrderTransactionData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tigeropen {
namespace push {
namespace pb {

namespace {

const ::google::protobuf::Descriptor* OrderTransactionData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderTransactionData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_OrderTransactionData_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_OrderTransactionData_2eproto() {
  protobuf_AddDesc_OrderTransactionData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "OrderTransactionData.proto");
  GOOGLE_CHECK(file != NULL);
  OrderTransactionData_descriptor_ = file->message_type(0);
  static const int OrderTransactionData_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, symbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, multiplier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, market_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, segtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, sectype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, filledprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, filledquantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, updatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, transacttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, timestamp_),
  };
  OrderTransactionData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OrderTransactionData_descriptor_,
      OrderTransactionData::internal_default_instance(),
      OrderTransactionData_offsets_,
      -1,
      -1,
      -1,
      sizeof(OrderTransactionData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderTransactionData, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_OrderTransactionData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OrderTransactionData_descriptor_, OrderTransactionData::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_OrderTransactionData_2eproto() {
  OrderTransactionData_default_instance_.Shutdown();
  delete OrderTransactionData_reflection_;
}

void protobuf_InitDefaults_OrderTransactionData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  OrderTransactionData_default_instance_.DefaultConstruct();
  OrderTransactionData_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_OrderTransactionData_2eproto_once_);
void protobuf_InitDefaults_OrderTransactionData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_OrderTransactionData_2eproto_once_,
                 &protobuf_InitDefaults_OrderTransactionData_2eproto_impl);
}
void protobuf_AddDesc_OrderTransactionData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_OrderTransactionData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032OrderTransactionData.proto\022\021tigeropen."
    "push.pb\"\316\002\n\024OrderTransactionData\022\n\n\002id\030\001"
    " \001(\022\022\017\n\007orderId\030\002 \001(\022\022\017\n\007account\030\003 \001(\t\022\016"
    "\n\006symbol\030\004 \001(\t\022\022\n\nidentifier\030\005 \001(\t\022\022\n\nmu"
    "ltiplier\030\006 \001(\r\022\016\n\006action\030\007 \001(\t\022\016\n\006market"
    "\030\010 \001(\t\022\020\n\010currency\030\t \001(\t\022\017\n\007segType\030\n \001("
    "\t\022\017\n\007secType\030\013 \001(\t\022\023\n\013filledPrice\030\014 \001(\001\022"
    "\026\n\016filledQuantity\030\r \001(\022\022\022\n\ncreateTime\030\016 "
    "\001(\004\022\022\n\nupdateTime\030\017 \001(\004\022\024\n\014transactTime\030"
    "\020 \001(\004\022\021\n\ttimestamp\030\021 \001(\004b\006proto3", 392);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "OrderTransactionData.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_OrderTransactionData_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_OrderTransactionData_2eproto_once_);
void protobuf_AddDesc_OrderTransactionData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_OrderTransactionData_2eproto_once_,
                 &protobuf_AddDesc_OrderTransactionData_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_OrderTransactionData_2eproto {
  StaticDescriptorInitializer_OrderTransactionData_2eproto() {
    protobuf_AddDesc_OrderTransactionData_2eproto();
  }
} static_descriptor_initializer_OrderTransactionData_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderTransactionData::kIdFieldNumber;
const int OrderTransactionData::kOrderIdFieldNumber;
const int OrderTransactionData::kAccountFieldNumber;
const int OrderTransactionData::kSymbolFieldNumber;
const int OrderTransactionData::kIdentifierFieldNumber;
const int OrderTransactionData::kMultiplierFieldNumber;
const int OrderTransactionData::kActionFieldNumber;
const int OrderTransactionData::kMarketFieldNumber;
const int OrderTransactionData::kCurrencyFieldNumber;
const int OrderTransactionData::kSegTypeFieldNumber;
const int OrderTransactionData::kSecTypeFieldNumber;
const int OrderTransactionData::kFilledPriceFieldNumber;
const int OrderTransactionData::kFilledQuantityFieldNumber;
const int OrderTransactionData::kCreateTimeFieldNumber;
const int OrderTransactionData::kUpdateTimeFieldNumber;
const int OrderTransactionData::kTransactTimeFieldNumber;
const int OrderTransactionData::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderTransactionData::OrderTransactionData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_OrderTransactionData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tigeropen.push.pb.OrderTransactionData)
}

void OrderTransactionData::InitAsDefaultInstance() {
}

OrderTransactionData::OrderTransactionData(const OrderTransactionData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tigeropen.push.pb.OrderTransactionData)
}

void OrderTransactionData::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sectype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&multiplier_) -
    reinterpret_cast<char*>(&id_) + sizeof(multiplier_));
  _cached_size_ = 0;
}

OrderTransactionData::~OrderTransactionData() {
  // @@protoc_insertion_point(destructor:tigeropen.push.pb.OrderTransactionData)
  SharedDtor();
}

void OrderTransactionData::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sectype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrderTransactionData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderTransactionData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderTransactionData_descriptor_;
}

const OrderTransactionData& OrderTransactionData::default_instance() {
  protobuf_InitDefaults_OrderTransactionData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OrderTransactionData> OrderTransactionData_default_instance_;

OrderTransactionData* OrderTransactionData::New(::google::protobuf::Arena* arena) const {
  OrderTransactionData* n = new OrderTransactionData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderTransactionData::Clear() {
// @@protoc_insertion_point(message_clear_start:tigeropen.push.pb.OrderTransactionData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OrderTransactionData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OrderTransactionData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, orderid_);
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  multiplier_ = 0u;
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(filledprice_, transacttime_);
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sectype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

}

bool OrderTransactionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tigeropen.push.pb.OrderTransactionData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_orderId;
        break;
      }

      // optional sint64 orderId = 2;
      case 2: {
        if (tag == 16) {
         parse_orderId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_account;
        break;
      }

      // optional string account = 3;
      case 3: {
        if (tag == 26) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderTransactionData.account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_symbol;
        break;
      }

      // optional string symbol = 4;
      case 4: {
        if (tag == 34) {
         parse_symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderTransactionData.symbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_identifier;
        break;
      }

      // optional string identifier = 5;
      case 5: {
        if (tag == 42) {
         parse_identifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identifier().data(), this->identifier().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderTransactionData.identifier"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_multiplier;
        break;
      }

      // optional uint32 multiplier = 6;
      case 6: {
        if (tag == 48) {
         parse_multiplier:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &multiplier_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_action;
        break;
      }

      // optional string action = 7;
      case 7: {
        if (tag == 58) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), this->action().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderTransactionData.action"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_market;
        break;
      }

      // optional string market = 8;
      case 8: {
        if (tag == 66) {
         parse_market:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_market()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->market().data(), this->market().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderTransactionData.market"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_currency;
        break;
      }

      // optional string currency = 9;
      case 9: {
        if (tag == 74) {
         parse_currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency().data(), this->currency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderTransactionData.currency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_segType;
        break;
      }

      // optional string segType = 10;
      case 10: {
        if (tag == 82) {
         parse_segType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_segtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->segtype().data(), this->segtype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderTransactionData.segType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_secType;
        break;
      }

      // optional string secType = 11;
      case 11: {
        if (tag == 90) {
         parse_secType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sectype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sectype().data(), this->sectype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderTransactionData.secType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_filledPrice;
        break;
      }

      // optional double filledPrice = 12;
      case 12: {
        if (tag == 97) {
         parse_filledPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &filledprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_filledQuantity;
        break;
      }

      // optional sint64 filledQuantity = 13;
      case 13: {
        if (tag == 104) {
         parse_filledQuantity:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &filledquantity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_createTime;
        break;
      }

      // optional uint64 createTime = 14;
      case 14: {
        if (tag == 112) {
         parse_createTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_updateTime;
        break;
      }

      // optional uint64 updateTime = 15;
      case 15: {
        if (tag == 120) {
         parse_updateTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updatetime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_transactTime;
        break;
      }

      // optional uint64 transactTime = 16;
      case 16: {
        if (tag == 128) {
         parse_transactTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &transacttime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_timestamp;
        break;
      }

      // optional uint64 timestamp = 17;
      case 17: {
        if (tag == 136) {
         parse_timestamp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tigeropen.push.pb.OrderTransactionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tigeropen.push.pb.OrderTransactionData)
  return false;
#undef DO_
}

void OrderTransactionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tigeropen.push.pb.OrderTransactionData)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // optional sint64 orderId = 2;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->orderid(), output);
  }

  // optional string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // optional string symbol = 4;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->symbol(), output);
  }

  // optional string identifier = 5;
  if (this->identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), this->identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->identifier(), output);
  }

  // optional uint32 multiplier = 6;
  if (this->multiplier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->multiplier(), output);
  }

  // optional string action = 7;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->action(), output);
  }

  // optional string market = 8;
  if (this->market().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->market().data(), this->market().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.market");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->market(), output);
  }

  // optional string currency = 9;
  if (this->currency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.currency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->currency(), output);
  }

  // optional string segType = 10;
  if (this->segtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segtype().data(), this->segtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.segType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->segtype(), output);
  }

  // optional string secType = 11;
  if (this->sectype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sectype().data(), this->sectype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.secType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sectype(), output);
  }

  // optional double filledPrice = 12;
  if (this->filledprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->filledprice(), output);
  }

  // optional sint64 filledQuantity = 13;
  if (this->filledquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(13, this->filledquantity(), output);
  }

  // optional uint64 createTime = 14;
  if (this->createtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->createtime(), output);
  }

  // optional uint64 updateTime = 15;
  if (this->updatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->updatetime(), output);
  }

  // optional uint64 transactTime = 16;
  if (this->transacttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->transacttime(), output);
  }

  // optional uint64 timestamp = 17;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(17, this->timestamp(), output);
  }

  // @@protoc_insertion_point(serialize_end:tigeropen.push.pb.OrderTransactionData)
}

::google::protobuf::uint8* OrderTransactionData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tigeropen.push.pb.OrderTransactionData)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->id(), target);
  }

  // optional sint64 orderId = 2;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->orderid(), target);
  }

  // optional string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // optional string symbol = 4;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->symbol(), target);
  }

  // optional string identifier = 5;
  if (this->identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), this->identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->identifier(), target);
  }

  // optional uint32 multiplier = 6;
  if (this->multiplier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->multiplier(), target);
  }

  // optional string action = 7;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->action(), target);
  }

  // optional string market = 8;
  if (this->market().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->market().data(), this->market().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.market");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->market(), target);
  }

  // optional string currency = 9;
  if (this->currency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.currency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->currency(), target);
  }

  // optional string segType = 10;
  if (this->segtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segtype().data(), this->segtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.segType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->segtype(), target);
  }

  // optional string secType = 11;
  if (this->sectype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sectype().data(), this->sectype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderTransactionData.secType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sectype(), target);
  }

  // optional double filledPrice = 12;
  if (this->filledprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->filledprice(), target);
  }

  // optional sint64 filledQuantity = 13;
  if (this->filledquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(13, this->filledquantity(), target);
  }

  // optional uint64 createTime = 14;
  if (this->createtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->createtime(), target);
  }

  // optional uint64 updateTime = 15;
  if (this->updatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->updatetime(), target);
  }

  // optional uint64 transactTime = 16;
  if (this->transacttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->transacttime(), target);
  }

  // optional uint64 timestamp = 17;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(17, this->timestamp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tigeropen.push.pb.OrderTransactionData)
  return target;
}

size_t OrderTransactionData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tigeropen.push.pb.OrderTransactionData)
  size_t total_size = 0;

  // optional sint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  // optional sint64 orderId = 2;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->orderid());
  }

  // optional string account = 3;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // optional string symbol = 4;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // optional string identifier = 5;
  if (this->identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identifier());
  }

  // optional uint32 multiplier = 6;
  if (this->multiplier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->multiplier());
  }

  // optional string action = 7;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  // optional string market = 8;
  if (this->market().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->market());
  }

  // optional string currency = 9;
  if (this->currency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency());
  }

  // optional string segType = 10;
  if (this->segtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->segtype());
  }

  // optional string secType = 11;
  if (this->sectype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sectype());
  }

  // optional double filledPrice = 12;
  if (this->filledprice() != 0) {
    total_size += 1 + 8;
  }

  // optional sint64 filledQuantity = 13;
  if (this->filledquantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->filledquantity());
  }

  // optional uint64 createTime = 14;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createtime());
  }

  // optional uint64 updateTime = 15;
  if (this->updatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->updatetime());
  }

  // optional uint64 transactTime = 16;
  if (this->transacttime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->transacttime());
  }

  // optional uint64 timestamp = 17;
  if (this->timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderTransactionData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tigeropen.push.pb.OrderTransactionData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OrderTransactionData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderTransactionData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tigeropen.push.pb.OrderTransactionData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tigeropen.push.pb.OrderTransactionData)
    UnsafeMergeFrom(*source);
  }
}

void OrderTransactionData::MergeFrom(const OrderTransactionData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tigeropen.push.pb.OrderTransactionData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OrderTransactionData::UnsafeMergeFrom(const OrderTransactionData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.identifier().size() > 0) {

    identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifier_);
  }
  if (from.multiplier() != 0) {
    set_multiplier(from.multiplier());
  }
  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  if (from.market().size() > 0) {

    market_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_);
  }
  if (from.currency().size() > 0) {

    currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  if (from.segtype().size() > 0) {

    segtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.segtype_);
  }
  if (from.sectype().size() > 0) {

    sectype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sectype_);
  }
  if (from.filledprice() != 0) {
    set_filledprice(from.filledprice());
  }
  if (from.filledquantity() != 0) {
    set_filledquantity(from.filledquantity());
  }
  if (from.createtime() != 0) {
    set_createtime(from.createtime());
  }
  if (from.updatetime() != 0) {
    set_updatetime(from.updatetime());
  }
  if (from.transacttime() != 0) {
    set_transacttime(from.transacttime());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void OrderTransactionData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tigeropen.push.pb.OrderTransactionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderTransactionData::CopyFrom(const OrderTransactionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tigeropen.push.pb.OrderTransactionData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OrderTransactionData::IsInitialized() const {

  return true;
}

void OrderTransactionData::Swap(OrderTransactionData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderTransactionData::InternalSwap(OrderTransactionData* other) {
  std::swap(id_, other->id_);
  std::swap(orderid_, other->orderid_);
  account_.Swap(&other->account_);
  symbol_.Swap(&other->symbol_);
  identifier_.Swap(&other->identifier_);
  std::swap(multiplier_, other->multiplier_);
  action_.Swap(&other->action_);
  market_.Swap(&other->market_);
  currency_.Swap(&other->currency_);
  segtype_.Swap(&other->segtype_);
  sectype_.Swap(&other->sectype_);
  std::swap(filledprice_, other->filledprice_);
  std::swap(filledquantity_, other->filledquantity_);
  std::swap(createtime_, other->createtime_);
  std::swap(updatetime_, other->updatetime_);
  std::swap(transacttime_, other->transacttime_);
  std::swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderTransactionData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderTransactionData_descriptor_;
  metadata.reflection = OrderTransactionData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderTransactionData

// optional sint64 id = 1;
void OrderTransactionData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 OrderTransactionData::id() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.id)
  return id_;
}
void OrderTransactionData::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.id)
}

// optional sint64 orderId = 2;
void OrderTransactionData::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 OrderTransactionData::orderid() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.orderId)
  return orderid_;
}
void OrderTransactionData::set_orderid(::google::protobuf::int64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.orderId)
}

// optional string account = 3;
void OrderTransactionData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderTransactionData::account() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.account)
}
void OrderTransactionData::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.account)
}
void OrderTransactionData::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.account)
}
::std::string* OrderTransactionData::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderTransactionData::release_account() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.account)
}

// optional string symbol = 4;
void OrderTransactionData::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderTransactionData::symbol() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.symbol)
  return symbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.symbol)
}
void OrderTransactionData::set_symbol(const char* value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.symbol)
}
void OrderTransactionData::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.symbol)
}
::std::string* OrderTransactionData::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderTransactionData::release_symbol() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.symbol)
}

// optional string identifier = 5;
void OrderTransactionData::clear_identifier() {
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderTransactionData::identifier() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.identifier)
  return identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_identifier(const ::std::string& value) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.identifier)
}
void OrderTransactionData::set_identifier(const char* value) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.identifier)
}
void OrderTransactionData::set_identifier(const char* value, size_t size) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.identifier)
}
::std::string* OrderTransactionData::mutable_identifier() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.identifier)
  return identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderTransactionData::release_identifier() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.identifier)
  
  return identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_allocated_identifier(::std::string* identifier) {
  if (identifier != NULL) {
    
  } else {
    
  }
  identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifier);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.identifier)
}

// optional uint32 multiplier = 6;
void OrderTransactionData::clear_multiplier() {
  multiplier_ = 0u;
}
::google::protobuf::uint32 OrderTransactionData::multiplier() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.multiplier)
  return multiplier_;
}
void OrderTransactionData::set_multiplier(::google::protobuf::uint32 value) {
  
  multiplier_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.multiplier)
}

// optional string action = 7;
void OrderTransactionData::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderTransactionData::action() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.action)
  return action_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.action)
}
void OrderTransactionData::set_action(const char* value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.action)
}
void OrderTransactionData::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.action)
}
::std::string* OrderTransactionData::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderTransactionData::release_action() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.action)
}

// optional string market = 8;
void OrderTransactionData::clear_market() {
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderTransactionData::market() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.market)
  return market_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_market(const ::std::string& value) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.market)
}
void OrderTransactionData::set_market(const char* value) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.market)
}
void OrderTransactionData::set_market(const char* value, size_t size) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.market)
}
::std::string* OrderTransactionData::mutable_market() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.market)
  return market_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderTransactionData::release_market() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.market)
  
  return market_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_allocated_market(::std::string* market) {
  if (market != NULL) {
    
  } else {
    
  }
  market_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), market);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.market)
}

// optional string currency = 9;
void OrderTransactionData::clear_currency() {
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderTransactionData::currency() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.currency)
  return currency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_currency(const ::std::string& value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.currency)
}
void OrderTransactionData::set_currency(const char* value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.currency)
}
void OrderTransactionData::set_currency(const char* value, size_t size) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.currency)
}
::std::string* OrderTransactionData::mutable_currency() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.currency)
  return currency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderTransactionData::release_currency() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.currency)
  
  return currency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_allocated_currency(::std::string* currency) {
  if (currency != NULL) {
    
  } else {
    
  }
  currency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.currency)
}

// optional string segType = 10;
void OrderTransactionData::clear_segtype() {
  segtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderTransactionData::segtype() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.segType)
  return segtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_segtype(const ::std::string& value) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.segType)
}
void OrderTransactionData::set_segtype(const char* value) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.segType)
}
void OrderTransactionData::set_segtype(const char* value, size_t size) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.segType)
}
::std::string* OrderTransactionData::mutable_segtype() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.segType)
  return segtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderTransactionData::release_segtype() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.segType)
  
  return segtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_allocated_segtype(::std::string* segtype) {
  if (segtype != NULL) {
    
  } else {
    
  }
  segtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segtype);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.segType)
}

// optional string secType = 11;
void OrderTransactionData::clear_sectype() {
  sectype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderTransactionData::sectype() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.secType)
  return sectype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_sectype(const ::std::string& value) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.secType)
}
void OrderTransactionData::set_sectype(const char* value) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderTransactionData.secType)
}
void OrderTransactionData::set_sectype(const char* value, size_t size) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderTransactionData.secType)
}
::std::string* OrderTransactionData::mutable_sectype() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderTransactionData.secType)
  return sectype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderTransactionData::release_sectype() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderTransactionData.secType)
  
  return sectype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderTransactionData::set_allocated_sectype(::std::string* sectype) {
  if (sectype != NULL) {
    
  } else {
    
  }
  sectype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sectype);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderTransactionData.secType)
}

// optional double filledPrice = 12;
void OrderTransactionData::clear_filledprice() {
  filledprice_ = 0;
}
double OrderTransactionData::filledprice() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.filledPrice)
  return filledprice_;
}
void OrderTransactionData::set_filledprice(double value) {
  
  filledprice_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.filledPrice)
}

// optional sint64 filledQuantity = 13;
void OrderTransactionData::clear_filledquantity() {
  filledquantity_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 OrderTransactionData::filledquantity() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.filledQuantity)
  return filledquantity_;
}
void OrderTransactionData::set_filledquantity(::google::protobuf::int64 value) {
  
  filledquantity_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.filledQuantity)
}

// optional uint64 createTime = 14;
void OrderTransactionData::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OrderTransactionData::createtime() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.createTime)
  return createtime_;
}
void OrderTransactionData::set_createtime(::google::protobuf::uint64 value) {
  
  createtime_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.createTime)
}

// optional uint64 updateTime = 15;
void OrderTransactionData::clear_updatetime() {
  updatetime_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OrderTransactionData::updatetime() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.updateTime)
  return updatetime_;
}
void OrderTransactionData::set_updatetime(::google::protobuf::uint64 value) {
  
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.updateTime)
}

// optional uint64 transactTime = 16;
void OrderTransactionData::clear_transacttime() {
  transacttime_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OrderTransactionData::transacttime() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.transactTime)
  return transacttime_;
}
void OrderTransactionData::set_transacttime(::google::protobuf::uint64 value) {
  
  transacttime_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.transactTime)
}

// optional uint64 timestamp = 17;
void OrderTransactionData::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OrderTransactionData::timestamp() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderTransactionData.timestamp)
  return timestamp_;
}
void OrderTransactionData::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderTransactionData.timestamp)
}

inline const OrderTransactionData* OrderTransactionData::internal_default_instance() {
  return &OrderTransactionData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace push
}  // namespace tigeropen

// @@protoc_insertion_point(global_scope)
