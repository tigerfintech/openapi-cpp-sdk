// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderStatusData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "OrderStatusData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tigeropen {
namespace push {
namespace pb {

namespace {

const ::google::protobuf::Descriptor* OrderStatusData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderStatusData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_OrderStatusData_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_OrderStatusData_2eproto() {
  protobuf_AddDesc_OrderStatusData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "OrderStatusData.proto");
  GOOGLE_CHECK(file != NULL);
  OrderStatusData_descriptor_ = file->message_type(0);
  static const int OrderStatusData_offsets_[41] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, symbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, expiry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, strike_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, right_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, multiplier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, market_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, segtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, sectype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, ordertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, islong_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, totalquantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, totalquantityscale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, filledquantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, filledquantityscale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, avgfillprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, limitprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, stopprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, realizedpnl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, replacestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, cancelstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, outsiderth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, canmodify_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, cancancel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, liquidation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, errormsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, attrdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, commissionandfee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, opentime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, usermark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, totalcashamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, filledcashamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, gst_),
  };
  OrderStatusData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OrderStatusData_descriptor_,
      OrderStatusData::internal_default_instance(),
      OrderStatusData_offsets_,
      -1,
      -1,
      -1,
      sizeof(OrderStatusData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatusData, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_OrderStatusData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OrderStatusData_descriptor_, OrderStatusData::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_OrderStatusData_2eproto() {
  OrderStatusData_default_instance_.Shutdown();
  delete OrderStatusData_reflection_;
}

void protobuf_InitDefaults_OrderStatusData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  OrderStatusData_default_instance_.DefaultConstruct();
  OrderStatusData_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_OrderStatusData_2eproto_once_);
void protobuf_InitDefaults_OrderStatusData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_OrderStatusData_2eproto_once_,
                 &protobuf_InitDefaults_OrderStatusData_2eproto_impl);
}
void protobuf_AddDesc_OrderStatusData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_OrderStatusData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025OrderStatusData.proto\022\021tigeropen.push."
    "pb\"\245\006\n\017OrderStatusData\022\n\n\002id\030\001 \001(\022\022\017\n\007ac"
    "count\030\002 \001(\t\022\016\n\006symbol\030\003 \001(\t\022\016\n\006expiry\030\004 "
    "\001(\t\022\016\n\006strike\030\005 \001(\t\022\r\n\005right\030\006 \001(\t\022\022\n\nid"
    "entifier\030\007 \001(\t\022\022\n\nmultiplier\030\010 \001(\r\022\016\n\006ac"
    "tion\030\t \001(\t\022\016\n\006market\030\n \001(\t\022\020\n\010currency\030\013"
    " \001(\t\022\017\n\007segType\030\014 \001(\t\022\017\n\007secType\030\r \001(\t\022\021"
    "\n\torderType\030\016 \001(\t\022\016\n\006isLong\030\017 \001(\010\022\025\n\rtot"
    "alQuantity\030\020 \001(\022\022\032\n\022totalQuantityScale\030\021"
    " \001(\021\022\026\n\016filledQuantity\030\022 \001(\022\022\033\n\023filledQu"
    "antityScale\030\023 \001(\021\022\024\n\014avgFillPrice\030\024 \001(\001\022"
    "\022\n\nlimitPrice\030\025 \001(\001\022\021\n\tstopPrice\030\026 \001(\001\022\023"
    "\n\013realizedPnl\030\027 \001(\001\022\016\n\006status\030\030 \001(\t\022\025\n\rr"
    "eplaceStatus\030\031 \001(\t\022\024\n\014cancelStatus\030\032 \001(\t"
    "\022\022\n\noutsideRth\030\033 \001(\010\022\021\n\tcanModify\030\034 \001(\010\022"
    "\021\n\tcanCancel\030\035 \001(\010\022\023\n\013liquidation\030\036 \001(\010\022"
    "\014\n\004name\030\037 \001(\t\022\016\n\006source\030  \001(\t\022\020\n\010errorMs"
    "g\030! \001(\t\022\020\n\010attrDesc\030\" \001(\t\022\030\n\020commissionA"
    "ndFee\030# \001(\002\022\020\n\010openTime\030$ \001(\004\022\021\n\ttimesta"
    "mp\030% \001(\004\022\020\n\010userMark\030& \001(\t\022\027\n\017totalCashA"
    "mount\030\' \001(\001\022\030\n\020filledCashAmount\030( \001(\001\022\013\n"
    "\003gst\030) \001(\001b\006proto3", 858);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "OrderStatusData.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_OrderStatusData_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_OrderStatusData_2eproto_once_);
void protobuf_AddDesc_OrderStatusData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_OrderStatusData_2eproto_once_,
                 &protobuf_AddDesc_OrderStatusData_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_OrderStatusData_2eproto {
  StaticDescriptorInitializer_OrderStatusData_2eproto() {
    protobuf_AddDesc_OrderStatusData_2eproto();
  }
} static_descriptor_initializer_OrderStatusData_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderStatusData::kIdFieldNumber;
const int OrderStatusData::kAccountFieldNumber;
const int OrderStatusData::kSymbolFieldNumber;
const int OrderStatusData::kExpiryFieldNumber;
const int OrderStatusData::kStrikeFieldNumber;
const int OrderStatusData::kRightFieldNumber;
const int OrderStatusData::kIdentifierFieldNumber;
const int OrderStatusData::kMultiplierFieldNumber;
const int OrderStatusData::kActionFieldNumber;
const int OrderStatusData::kMarketFieldNumber;
const int OrderStatusData::kCurrencyFieldNumber;
const int OrderStatusData::kSegTypeFieldNumber;
const int OrderStatusData::kSecTypeFieldNumber;
const int OrderStatusData::kOrderTypeFieldNumber;
const int OrderStatusData::kIsLongFieldNumber;
const int OrderStatusData::kTotalQuantityFieldNumber;
const int OrderStatusData::kTotalQuantityScaleFieldNumber;
const int OrderStatusData::kFilledQuantityFieldNumber;
const int OrderStatusData::kFilledQuantityScaleFieldNumber;
const int OrderStatusData::kAvgFillPriceFieldNumber;
const int OrderStatusData::kLimitPriceFieldNumber;
const int OrderStatusData::kStopPriceFieldNumber;
const int OrderStatusData::kRealizedPnlFieldNumber;
const int OrderStatusData::kStatusFieldNumber;
const int OrderStatusData::kReplaceStatusFieldNumber;
const int OrderStatusData::kCancelStatusFieldNumber;
const int OrderStatusData::kOutsideRthFieldNumber;
const int OrderStatusData::kCanModifyFieldNumber;
const int OrderStatusData::kCanCancelFieldNumber;
const int OrderStatusData::kLiquidationFieldNumber;
const int OrderStatusData::kNameFieldNumber;
const int OrderStatusData::kSourceFieldNumber;
const int OrderStatusData::kErrorMsgFieldNumber;
const int OrderStatusData::kAttrDescFieldNumber;
const int OrderStatusData::kCommissionAndFeeFieldNumber;
const int OrderStatusData::kOpenTimeFieldNumber;
const int OrderStatusData::kTimestampFieldNumber;
const int OrderStatusData::kUserMarkFieldNumber;
const int OrderStatusData::kTotalCashAmountFieldNumber;
const int OrderStatusData::kFilledCashAmountFieldNumber;
const int OrderStatusData::kGstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderStatusData::OrderStatusData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_OrderStatusData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tigeropen.push.pb.OrderStatusData)
}

void OrderStatusData::InitAsDefaultInstance() {
}

OrderStatusData::OrderStatusData(const OrderStatusData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tigeropen.push.pb.OrderStatusData)
}

void OrderStatusData::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strike_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  right_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sectype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordertype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replacestatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cancelstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errormsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attrdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usermark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&gst_) -
    reinterpret_cast<char*>(&id_) + sizeof(gst_));
  _cached_size_ = 0;
}

OrderStatusData::~OrderStatusData() {
  // @@protoc_insertion_point(destructor:tigeropen.push.pb.OrderStatusData)
  SharedDtor();
}

void OrderStatusData::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiry_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strike_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  right_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sectype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordertype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replacestatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cancelstatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errormsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attrdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usermark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrderStatusData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderStatusData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderStatusData_descriptor_;
}

const OrderStatusData& OrderStatusData::default_instance() {
  protobuf_InitDefaults_OrderStatusData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OrderStatusData> OrderStatusData_default_instance_;

OrderStatusData* OrderStatusData::New(::google::protobuf::Arena* arena) const {
  OrderStatusData* n = new OrderStatusData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderStatusData::Clear() {
// @@protoc_insertion_point(message_clear_start:tigeropen.push.pb.OrderStatusData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OrderStatusData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OrderStatusData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, multiplier_);
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strike_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  right_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sectype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordertype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  islong_ = false;
  totalquantity_ = GOOGLE_LONGLONG(0);
  ZR_(filledquantity_, filledquantityscale_);
  totalquantityscale_ = 0;
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(outsiderth_, liquidation_);
  replacestatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cancelstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(commissionandfee_, filledcashamount_);
  errormsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attrdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usermark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gst_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool OrderStatusData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tigeropen.push.pb.OrderStatusData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_account;
        break;
      }

      // optional string account = 2;
      case 2: {
        if (tag == 18) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_symbol;
        break;
      }

      // optional string symbol = 3;
      case 3: {
        if (tag == 26) {
         parse_symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.symbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_expiry;
        break;
      }

      // optional string expiry = 4;
      case 4: {
        if (tag == 34) {
         parse_expiry:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expiry()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expiry().data(), this->expiry().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.expiry"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_strike;
        break;
      }

      // optional string strike = 5;
      case 5: {
        if (tag == 42) {
         parse_strike:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strike()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strike().data(), this->strike().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.strike"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_right;
        break;
      }

      // optional string right = 6;
      case 6: {
        if (tag == 50) {
         parse_right:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_right()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->right().data(), this->right().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.right"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_identifier;
        break;
      }

      // optional string identifier = 7;
      case 7: {
        if (tag == 58) {
         parse_identifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identifier().data(), this->identifier().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.identifier"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_multiplier;
        break;
      }

      // optional uint32 multiplier = 8;
      case 8: {
        if (tag == 64) {
         parse_multiplier:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &multiplier_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_action;
        break;
      }

      // optional string action = 9;
      case 9: {
        if (tag == 74) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), this->action().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.action"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_market;
        break;
      }

      // optional string market = 10;
      case 10: {
        if (tag == 82) {
         parse_market:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_market()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->market().data(), this->market().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.market"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_currency;
        break;
      }

      // optional string currency = 11;
      case 11: {
        if (tag == 90) {
         parse_currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency().data(), this->currency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.currency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_segType;
        break;
      }

      // optional string segType = 12;
      case 12: {
        if (tag == 98) {
         parse_segType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_segtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->segtype().data(), this->segtype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.segType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_secType;
        break;
      }

      // optional string secType = 13;
      case 13: {
        if (tag == 106) {
         parse_secType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sectype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sectype().data(), this->sectype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.secType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_orderType;
        break;
      }

      // optional string orderType = 14;
      case 14: {
        if (tag == 114) {
         parse_orderType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordertype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ordertype().data(), this->ordertype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.orderType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_isLong;
        break;
      }

      // optional bool isLong = 15;
      case 15: {
        if (tag == 120) {
         parse_isLong:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islong_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_totalQuantity;
        break;
      }

      // optional sint64 totalQuantity = 16;
      case 16: {
        if (tag == 128) {
         parse_totalQuantity:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &totalquantity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_totalQuantityScale;
        break;
      }

      // optional sint32 totalQuantityScale = 17;
      case 17: {
        if (tag == 136) {
         parse_totalQuantityScale:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &totalquantityscale_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_filledQuantity;
        break;
      }

      // optional sint64 filledQuantity = 18;
      case 18: {
        if (tag == 144) {
         parse_filledQuantity:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &filledquantity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_filledQuantityScale;
        break;
      }

      // optional sint32 filledQuantityScale = 19;
      case 19: {
        if (tag == 152) {
         parse_filledQuantityScale:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &filledquantityscale_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_avgFillPrice;
        break;
      }

      // optional double avgFillPrice = 20;
      case 20: {
        if (tag == 161) {
         parse_avgFillPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avgfillprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_limitPrice;
        break;
      }

      // optional double limitPrice = 21;
      case 21: {
        if (tag == 169) {
         parse_limitPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &limitprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(177)) goto parse_stopPrice;
        break;
      }

      // optional double stopPrice = 22;
      case 22: {
        if (tag == 177) {
         parse_stopPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stopprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(185)) goto parse_realizedPnl;
        break;
      }

      // optional double realizedPnl = 23;
      case 23: {
        if (tag == 185) {
         parse_realizedPnl:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &realizedpnl_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_status;
        break;
      }

      // optional string status = 24;
      case 24: {
        if (tag == 194) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), this->status().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.status"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_replaceStatus;
        break;
      }

      // optional string replaceStatus = 25;
      case 25: {
        if (tag == 202) {
         parse_replaceStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_replacestatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->replacestatus().data(), this->replacestatus().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.replaceStatus"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_cancelStatus;
        break;
      }

      // optional string cancelStatus = 26;
      case 26: {
        if (tag == 210) {
         parse_cancelStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cancelstatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cancelstatus().data(), this->cancelstatus().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.cancelStatus"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_outsideRth;
        break;
      }

      // optional bool outsideRth = 27;
      case 27: {
        if (tag == 216) {
         parse_outsideRth:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &outsiderth_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_canModify;
        break;
      }

      // optional bool canModify = 28;
      case 28: {
        if (tag == 224) {
         parse_canModify:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &canmodify_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_canCancel;
        break;
      }

      // optional bool canCancel = 29;
      case 29: {
        if (tag == 232) {
         parse_canCancel:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cancancel_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_liquidation;
        break;
      }

      // optional bool liquidation = 30;
      case 30: {
        if (tag == 240) {
         parse_liquidation:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &liquidation_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_name;
        break;
      }

      // optional string name = 31;
      case 31: {
        if (tag == 250) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(258)) goto parse_source;
        break;
      }

      // optional string source = 32;
      case 32: {
        if (tag == 258) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.source"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266)) goto parse_errorMsg;
        break;
      }

      // optional string errorMsg = 33;
      case 33: {
        if (tag == 266) {
         parse_errorMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errormsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errormsg().data(), this->errormsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.errorMsg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(274)) goto parse_attrDesc;
        break;
      }

      // optional string attrDesc = 34;
      case 34: {
        if (tag == 274) {
         parse_attrDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attrdesc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attrdesc().data(), this->attrdesc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.attrDesc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(285)) goto parse_commissionAndFee;
        break;
      }

      // optional float commissionAndFee = 35;
      case 35: {
        if (tag == 285) {
         parse_commissionAndFee:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &commissionandfee_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_openTime;
        break;
      }

      // optional uint64 openTime = 36;
      case 36: {
        if (tag == 288) {
         parse_openTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &opentime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(296)) goto parse_timestamp;
        break;
      }

      // optional uint64 timestamp = 37;
      case 37: {
        if (tag == 296) {
         parse_timestamp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(306)) goto parse_userMark;
        break;
      }

      // optional string userMark = 38;
      case 38: {
        if (tag == 306) {
         parse_userMark:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usermark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usermark().data(), this->usermark().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.OrderStatusData.userMark"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(313)) goto parse_totalCashAmount;
        break;
      }

      // optional double totalCashAmount = 39;
      case 39: {
        if (tag == 313) {
         parse_totalCashAmount:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &totalcashamount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(321)) goto parse_filledCashAmount;
        break;
      }

      // optional double filledCashAmount = 40;
      case 40: {
        if (tag == 321) {
         parse_filledCashAmount:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &filledcashamount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(329)) goto parse_gst;
        break;
      }

      // optional double gst = 41;
      case 41: {
        if (tag == 329) {
         parse_gst:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gst_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tigeropen.push.pb.OrderStatusData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tigeropen.push.pb.OrderStatusData)
  return false;
#undef DO_
}

void OrderStatusData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tigeropen.push.pb.OrderStatusData)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // optional string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // optional string symbol = 3;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->symbol(), output);
  }

  // optional string expiry = 4;
  if (this->expiry().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiry().data(), this->expiry().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.expiry");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->expiry(), output);
  }

  // optional string strike = 5;
  if (this->strike().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strike().data(), this->strike().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.strike");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strike(), output);
  }

  // optional string right = 6;
  if (this->right().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->right().data(), this->right().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.right");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->right(), output);
  }

  // optional string identifier = 7;
  if (this->identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), this->identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->identifier(), output);
  }

  // optional uint32 multiplier = 8;
  if (this->multiplier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->multiplier(), output);
  }

  // optional string action = 9;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->action(), output);
  }

  // optional string market = 10;
  if (this->market().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->market().data(), this->market().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.market");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->market(), output);
  }

  // optional string currency = 11;
  if (this->currency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.currency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->currency(), output);
  }

  // optional string segType = 12;
  if (this->segtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segtype().data(), this->segtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.segType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->segtype(), output);
  }

  // optional string secType = 13;
  if (this->sectype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sectype().data(), this->sectype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.secType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->sectype(), output);
  }

  // optional string orderType = 14;
  if (this->ordertype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ordertype().data(), this->ordertype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.orderType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->ordertype(), output);
  }

  // optional bool isLong = 15;
  if (this->islong() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->islong(), output);
  }

  // optional sint64 totalQuantity = 16;
  if (this->totalquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(16, this->totalquantity(), output);
  }

  // optional sint32 totalQuantityScale = 17;
  if (this->totalquantityscale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(17, this->totalquantityscale(), output);
  }

  // optional sint64 filledQuantity = 18;
  if (this->filledquantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(18, this->filledquantity(), output);
  }

  // optional sint32 filledQuantityScale = 19;
  if (this->filledquantityscale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(19, this->filledquantityscale(), output);
  }

  // optional double avgFillPrice = 20;
  if (this->avgfillprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->avgfillprice(), output);
  }

  // optional double limitPrice = 21;
  if (this->limitprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->limitprice(), output);
  }

  // optional double stopPrice = 22;
  if (this->stopprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->stopprice(), output);
  }

  // optional double realizedPnl = 23;
  if (this->realizedpnl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->realizedpnl(), output);
  }

  // optional string status = 24;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->status(), output);
  }

  // optional string replaceStatus = 25;
  if (this->replacestatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->replacestatus().data(), this->replacestatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.replaceStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->replacestatus(), output);
  }

  // optional string cancelStatus = 26;
  if (this->cancelstatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cancelstatus().data(), this->cancelstatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.cancelStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->cancelstatus(), output);
  }

  // optional bool outsideRth = 27;
  if (this->outsiderth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->outsiderth(), output);
  }

  // optional bool canModify = 28;
  if (this->canmodify() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->canmodify(), output);
  }

  // optional bool canCancel = 29;
  if (this->cancancel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(29, this->cancancel(), output);
  }

  // optional bool liquidation = 30;
  if (this->liquidation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(30, this->liquidation(), output);
  }

  // optional string name = 31;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      31, this->name(), output);
  }

  // optional string source = 32;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      32, this->source(), output);
  }

  // optional string errorMsg = 33;
  if (this->errormsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errormsg().data(), this->errormsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.errorMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->errormsg(), output);
  }

  // optional string attrDesc = 34;
  if (this->attrdesc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attrdesc().data(), this->attrdesc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.attrDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      34, this->attrdesc(), output);
  }

  // optional float commissionAndFee = 35;
  if (this->commissionandfee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(35, this->commissionandfee(), output);
  }

  // optional uint64 openTime = 36;
  if (this->opentime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(36, this->opentime(), output);
  }

  // optional uint64 timestamp = 37;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(37, this->timestamp(), output);
  }

  // optional string userMark = 38;
  if (this->usermark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usermark().data(), this->usermark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.userMark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      38, this->usermark(), output);
  }

  // optional double totalCashAmount = 39;
  if (this->totalcashamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(39, this->totalcashamount(), output);
  }

  // optional double filledCashAmount = 40;
  if (this->filledcashamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(40, this->filledcashamount(), output);
  }

  // optional double gst = 41;
  if (this->gst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(41, this->gst(), output);
  }

  // @@protoc_insertion_point(serialize_end:tigeropen.push.pb.OrderStatusData)
}

::google::protobuf::uint8* OrderStatusData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tigeropen.push.pb.OrderStatusData)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->id(), target);
  }

  // optional string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // optional string symbol = 3;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->symbol(), target);
  }

  // optional string expiry = 4;
  if (this->expiry().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiry().data(), this->expiry().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.expiry");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->expiry(), target);
  }

  // optional string strike = 5;
  if (this->strike().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strike().data(), this->strike().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.strike");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strike(), target);
  }

  // optional string right = 6;
  if (this->right().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->right().data(), this->right().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.right");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->right(), target);
  }

  // optional string identifier = 7;
  if (this->identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), this->identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->identifier(), target);
  }

  // optional uint32 multiplier = 8;
  if (this->multiplier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->multiplier(), target);
  }

  // optional string action = 9;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->action(), target);
  }

  // optional string market = 10;
  if (this->market().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->market().data(), this->market().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.market");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->market(), target);
  }

  // optional string currency = 11;
  if (this->currency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.currency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->currency(), target);
  }

  // optional string segType = 12;
  if (this->segtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segtype().data(), this->segtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.segType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->segtype(), target);
  }

  // optional string secType = 13;
  if (this->sectype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sectype().data(), this->sectype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.secType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->sectype(), target);
  }

  // optional string orderType = 14;
  if (this->ordertype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ordertype().data(), this->ordertype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.orderType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->ordertype(), target);
  }

  // optional bool isLong = 15;
  if (this->islong() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->islong(), target);
  }

  // optional sint64 totalQuantity = 16;
  if (this->totalquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(16, this->totalquantity(), target);
  }

  // optional sint32 totalQuantityScale = 17;
  if (this->totalquantityscale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(17, this->totalquantityscale(), target);
  }

  // optional sint64 filledQuantity = 18;
  if (this->filledquantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(18, this->filledquantity(), target);
  }

  // optional sint32 filledQuantityScale = 19;
  if (this->filledquantityscale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(19, this->filledquantityscale(), target);
  }

  // optional double avgFillPrice = 20;
  if (this->avgfillprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->avgfillprice(), target);
  }

  // optional double limitPrice = 21;
  if (this->limitprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->limitprice(), target);
  }

  // optional double stopPrice = 22;
  if (this->stopprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->stopprice(), target);
  }

  // optional double realizedPnl = 23;
  if (this->realizedpnl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->realizedpnl(), target);
  }

  // optional string status = 24;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->status(), target);
  }

  // optional string replaceStatus = 25;
  if (this->replacestatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->replacestatus().data(), this->replacestatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.replaceStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->replacestatus(), target);
  }

  // optional string cancelStatus = 26;
  if (this->cancelstatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cancelstatus().data(), this->cancelstatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.cancelStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->cancelstatus(), target);
  }

  // optional bool outsideRth = 27;
  if (this->outsiderth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->outsiderth(), target);
  }

  // optional bool canModify = 28;
  if (this->canmodify() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->canmodify(), target);
  }

  // optional bool canCancel = 29;
  if (this->cancancel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(29, this->cancancel(), target);
  }

  // optional bool liquidation = 30;
  if (this->liquidation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(30, this->liquidation(), target);
  }

  // optional string name = 31;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->name(), target);
  }

  // optional string source = 32;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->source(), target);
  }

  // optional string errorMsg = 33;
  if (this->errormsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errormsg().data(), this->errormsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.errorMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->errormsg(), target);
  }

  // optional string attrDesc = 34;
  if (this->attrdesc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attrdesc().data(), this->attrdesc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.attrDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->attrdesc(), target);
  }

  // optional float commissionAndFee = 35;
  if (this->commissionandfee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(35, this->commissionandfee(), target);
  }

  // optional uint64 openTime = 36;
  if (this->opentime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(36, this->opentime(), target);
  }

  // optional uint64 timestamp = 37;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(37, this->timestamp(), target);
  }

  // optional string userMark = 38;
  if (this->usermark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usermark().data(), this->usermark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.OrderStatusData.userMark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        38, this->usermark(), target);
  }

  // optional double totalCashAmount = 39;
  if (this->totalcashamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(39, this->totalcashamount(), target);
  }

  // optional double filledCashAmount = 40;
  if (this->filledcashamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(40, this->filledcashamount(), target);
  }

  // optional double gst = 41;
  if (this->gst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(41, this->gst(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tigeropen.push.pb.OrderStatusData)
  return target;
}

size_t OrderStatusData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tigeropen.push.pb.OrderStatusData)
  size_t total_size = 0;

  // optional sint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  // optional string account = 2;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // optional string symbol = 3;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // optional string expiry = 4;
  if (this->expiry().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expiry());
  }

  // optional string strike = 5;
  if (this->strike().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strike());
  }

  // optional string right = 6;
  if (this->right().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->right());
  }

  // optional string identifier = 7;
  if (this->identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identifier());
  }

  // optional uint32 multiplier = 8;
  if (this->multiplier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->multiplier());
  }

  // optional string action = 9;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  // optional string market = 10;
  if (this->market().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->market());
  }

  // optional string currency = 11;
  if (this->currency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency());
  }

  // optional string segType = 12;
  if (this->segtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->segtype());
  }

  // optional string secType = 13;
  if (this->sectype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sectype());
  }

  // optional string orderType = 14;
  if (this->ordertype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ordertype());
  }

  // optional bool isLong = 15;
  if (this->islong() != 0) {
    total_size += 1 + 1;
  }

  // optional sint64 totalQuantity = 16;
  if (this->totalquantity() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->totalquantity());
  }

  // optional sint32 totalQuantityScale = 17;
  if (this->totalquantityscale() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->totalquantityscale());
  }

  // optional sint64 filledQuantity = 18;
  if (this->filledquantity() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->filledquantity());
  }

  // optional sint32 filledQuantityScale = 19;
  if (this->filledquantityscale() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->filledquantityscale());
  }

  // optional double avgFillPrice = 20;
  if (this->avgfillprice() != 0) {
    total_size += 2 + 8;
  }

  // optional double limitPrice = 21;
  if (this->limitprice() != 0) {
    total_size += 2 + 8;
  }

  // optional double stopPrice = 22;
  if (this->stopprice() != 0) {
    total_size += 2 + 8;
  }

  // optional double realizedPnl = 23;
  if (this->realizedpnl() != 0) {
    total_size += 2 + 8;
  }

  // optional string status = 24;
  if (this->status().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // optional string replaceStatus = 25;
  if (this->replacestatus().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->replacestatus());
  }

  // optional string cancelStatus = 26;
  if (this->cancelstatus().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cancelstatus());
  }

  // optional bool outsideRth = 27;
  if (this->outsiderth() != 0) {
    total_size += 2 + 1;
  }

  // optional bool canModify = 28;
  if (this->canmodify() != 0) {
    total_size += 2 + 1;
  }

  // optional bool canCancel = 29;
  if (this->cancancel() != 0) {
    total_size += 2 + 1;
  }

  // optional bool liquidation = 30;
  if (this->liquidation() != 0) {
    total_size += 2 + 1;
  }

  // optional string name = 31;
  if (this->name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string source = 32;
  if (this->source().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // optional string errorMsg = 33;
  if (this->errormsg().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errormsg());
  }

  // optional string attrDesc = 34;
  if (this->attrdesc().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->attrdesc());
  }

  // optional float commissionAndFee = 35;
  if (this->commissionandfee() != 0) {
    total_size += 2 + 4;
  }

  // optional uint64 openTime = 36;
  if (this->opentime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->opentime());
  }

  // optional uint64 timestamp = 37;
  if (this->timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // optional string userMark = 38;
  if (this->usermark().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usermark());
  }

  // optional double totalCashAmount = 39;
  if (this->totalcashamount() != 0) {
    total_size += 2 + 8;
  }

  // optional double filledCashAmount = 40;
  if (this->filledcashamount() != 0) {
    total_size += 2 + 8;
  }

  // optional double gst = 41;
  if (this->gst() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderStatusData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tigeropen.push.pb.OrderStatusData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OrderStatusData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderStatusData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tigeropen.push.pb.OrderStatusData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tigeropen.push.pb.OrderStatusData)
    UnsafeMergeFrom(*source);
  }
}

void OrderStatusData::MergeFrom(const OrderStatusData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tigeropen.push.pb.OrderStatusData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OrderStatusData::UnsafeMergeFrom(const OrderStatusData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.expiry().size() > 0) {

    expiry_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expiry_);
  }
  if (from.strike().size() > 0) {

    strike_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strike_);
  }
  if (from.right().size() > 0) {

    right_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.right_);
  }
  if (from.identifier().size() > 0) {

    identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifier_);
  }
  if (from.multiplier() != 0) {
    set_multiplier(from.multiplier());
  }
  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  if (from.market().size() > 0) {

    market_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_);
  }
  if (from.currency().size() > 0) {

    currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  if (from.segtype().size() > 0) {

    segtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.segtype_);
  }
  if (from.sectype().size() > 0) {

    sectype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sectype_);
  }
  if (from.ordertype().size() > 0) {

    ordertype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ordertype_);
  }
  if (from.islong() != 0) {
    set_islong(from.islong());
  }
  if (from.totalquantity() != 0) {
    set_totalquantity(from.totalquantity());
  }
  if (from.totalquantityscale() != 0) {
    set_totalquantityscale(from.totalquantityscale());
  }
  if (from.filledquantity() != 0) {
    set_filledquantity(from.filledquantity());
  }
  if (from.filledquantityscale() != 0) {
    set_filledquantityscale(from.filledquantityscale());
  }
  if (from.avgfillprice() != 0) {
    set_avgfillprice(from.avgfillprice());
  }
  if (from.limitprice() != 0) {
    set_limitprice(from.limitprice());
  }
  if (from.stopprice() != 0) {
    set_stopprice(from.stopprice());
  }
  if (from.realizedpnl() != 0) {
    set_realizedpnl(from.realizedpnl());
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.replacestatus().size() > 0) {

    replacestatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.replacestatus_);
  }
  if (from.cancelstatus().size() > 0) {

    cancelstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cancelstatus_);
  }
  if (from.outsiderth() != 0) {
    set_outsiderth(from.outsiderth());
  }
  if (from.canmodify() != 0) {
    set_canmodify(from.canmodify());
  }
  if (from.cancancel() != 0) {
    set_cancancel(from.cancancel());
  }
  if (from.liquidation() != 0) {
    set_liquidation(from.liquidation());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.errormsg().size() > 0) {

    errormsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormsg_);
  }
  if (from.attrdesc().size() > 0) {

    attrdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attrdesc_);
  }
  if (from.commissionandfee() != 0) {
    set_commissionandfee(from.commissionandfee());
  }
  if (from.opentime() != 0) {
    set_opentime(from.opentime());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.usermark().size() > 0) {

    usermark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usermark_);
  }
  if (from.totalcashamount() != 0) {
    set_totalcashamount(from.totalcashamount());
  }
  if (from.filledcashamount() != 0) {
    set_filledcashamount(from.filledcashamount());
  }
  if (from.gst() != 0) {
    set_gst(from.gst());
  }
}

void OrderStatusData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tigeropen.push.pb.OrderStatusData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderStatusData::CopyFrom(const OrderStatusData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tigeropen.push.pb.OrderStatusData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OrderStatusData::IsInitialized() const {

  return true;
}

void OrderStatusData::Swap(OrderStatusData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderStatusData::InternalSwap(OrderStatusData* other) {
  std::swap(id_, other->id_);
  account_.Swap(&other->account_);
  symbol_.Swap(&other->symbol_);
  expiry_.Swap(&other->expiry_);
  strike_.Swap(&other->strike_);
  right_.Swap(&other->right_);
  identifier_.Swap(&other->identifier_);
  std::swap(multiplier_, other->multiplier_);
  action_.Swap(&other->action_);
  market_.Swap(&other->market_);
  currency_.Swap(&other->currency_);
  segtype_.Swap(&other->segtype_);
  sectype_.Swap(&other->sectype_);
  ordertype_.Swap(&other->ordertype_);
  std::swap(islong_, other->islong_);
  std::swap(totalquantity_, other->totalquantity_);
  std::swap(totalquantityscale_, other->totalquantityscale_);
  std::swap(filledquantity_, other->filledquantity_);
  std::swap(filledquantityscale_, other->filledquantityscale_);
  std::swap(avgfillprice_, other->avgfillprice_);
  std::swap(limitprice_, other->limitprice_);
  std::swap(stopprice_, other->stopprice_);
  std::swap(realizedpnl_, other->realizedpnl_);
  status_.Swap(&other->status_);
  replacestatus_.Swap(&other->replacestatus_);
  cancelstatus_.Swap(&other->cancelstatus_);
  std::swap(outsiderth_, other->outsiderth_);
  std::swap(canmodify_, other->canmodify_);
  std::swap(cancancel_, other->cancancel_);
  std::swap(liquidation_, other->liquidation_);
  name_.Swap(&other->name_);
  source_.Swap(&other->source_);
  errormsg_.Swap(&other->errormsg_);
  attrdesc_.Swap(&other->attrdesc_);
  std::swap(commissionandfee_, other->commissionandfee_);
  std::swap(opentime_, other->opentime_);
  std::swap(timestamp_, other->timestamp_);
  usermark_.Swap(&other->usermark_);
  std::swap(totalcashamount_, other->totalcashamount_);
  std::swap(filledcashamount_, other->filledcashamount_);
  std::swap(gst_, other->gst_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderStatusData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderStatusData_descriptor_;
  metadata.reflection = OrderStatusData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderStatusData

// optional sint64 id = 1;
void OrderStatusData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 OrderStatusData::id() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.id)
  return id_;
}
void OrderStatusData::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.id)
}

// optional string account = 2;
void OrderStatusData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::account() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.account)
}
void OrderStatusData::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.account)
}
void OrderStatusData::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.account)
}
::std::string* OrderStatusData::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_account() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.account)
}

// optional string symbol = 3;
void OrderStatusData::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::symbol() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.symbol)
  return symbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.symbol)
}
void OrderStatusData::set_symbol(const char* value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.symbol)
}
void OrderStatusData::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.symbol)
}
::std::string* OrderStatusData::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_symbol() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.symbol)
}

// optional string expiry = 4;
void OrderStatusData::clear_expiry() {
  expiry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::expiry() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.expiry)
  return expiry_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_expiry(const ::std::string& value) {
  
  expiry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.expiry)
}
void OrderStatusData::set_expiry(const char* value) {
  
  expiry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.expiry)
}
void OrderStatusData::set_expiry(const char* value, size_t size) {
  
  expiry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.expiry)
}
::std::string* OrderStatusData::mutable_expiry() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.expiry)
  return expiry_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_expiry() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.expiry)
  
  return expiry_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_expiry(::std::string* expiry) {
  if (expiry != NULL) {
    
  } else {
    
  }
  expiry_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiry);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.expiry)
}

// optional string strike = 5;
void OrderStatusData::clear_strike() {
  strike_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::strike() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.strike)
  return strike_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_strike(const ::std::string& value) {
  
  strike_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.strike)
}
void OrderStatusData::set_strike(const char* value) {
  
  strike_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.strike)
}
void OrderStatusData::set_strike(const char* value, size_t size) {
  
  strike_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.strike)
}
::std::string* OrderStatusData::mutable_strike() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.strike)
  return strike_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_strike() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.strike)
  
  return strike_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_strike(::std::string* strike) {
  if (strike != NULL) {
    
  } else {
    
  }
  strike_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strike);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.strike)
}

// optional string right = 6;
void OrderStatusData::clear_right() {
  right_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::right() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.right)
  return right_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_right(const ::std::string& value) {
  
  right_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.right)
}
void OrderStatusData::set_right(const char* value) {
  
  right_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.right)
}
void OrderStatusData::set_right(const char* value, size_t size) {
  
  right_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.right)
}
::std::string* OrderStatusData::mutable_right() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.right)
  return right_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_right() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.right)
  
  return right_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_right(::std::string* right) {
  if (right != NULL) {
    
  } else {
    
  }
  right_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), right);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.right)
}

// optional string identifier = 7;
void OrderStatusData::clear_identifier() {
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::identifier() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.identifier)
  return identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_identifier(const ::std::string& value) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.identifier)
}
void OrderStatusData::set_identifier(const char* value) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.identifier)
}
void OrderStatusData::set_identifier(const char* value, size_t size) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.identifier)
}
::std::string* OrderStatusData::mutable_identifier() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.identifier)
  return identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_identifier() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.identifier)
  
  return identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_identifier(::std::string* identifier) {
  if (identifier != NULL) {
    
  } else {
    
  }
  identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifier);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.identifier)
}

// optional uint32 multiplier = 8;
void OrderStatusData::clear_multiplier() {
  multiplier_ = 0u;
}
::google::protobuf::uint32 OrderStatusData::multiplier() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.multiplier)
  return multiplier_;
}
void OrderStatusData::set_multiplier(::google::protobuf::uint32 value) {
  
  multiplier_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.multiplier)
}

// optional string action = 9;
void OrderStatusData::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::action() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.action)
  return action_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.action)
}
void OrderStatusData::set_action(const char* value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.action)
}
void OrderStatusData::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.action)
}
::std::string* OrderStatusData::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_action() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.action)
}

// optional string market = 10;
void OrderStatusData::clear_market() {
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::market() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.market)
  return market_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_market(const ::std::string& value) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.market)
}
void OrderStatusData::set_market(const char* value) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.market)
}
void OrderStatusData::set_market(const char* value, size_t size) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.market)
}
::std::string* OrderStatusData::mutable_market() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.market)
  return market_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_market() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.market)
  
  return market_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_market(::std::string* market) {
  if (market != NULL) {
    
  } else {
    
  }
  market_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), market);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.market)
}

// optional string currency = 11;
void OrderStatusData::clear_currency() {
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::currency() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.currency)
  return currency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_currency(const ::std::string& value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.currency)
}
void OrderStatusData::set_currency(const char* value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.currency)
}
void OrderStatusData::set_currency(const char* value, size_t size) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.currency)
}
::std::string* OrderStatusData::mutable_currency() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.currency)
  return currency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_currency() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.currency)
  
  return currency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_currency(::std::string* currency) {
  if (currency != NULL) {
    
  } else {
    
  }
  currency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.currency)
}

// optional string segType = 12;
void OrderStatusData::clear_segtype() {
  segtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::segtype() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.segType)
  return segtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_segtype(const ::std::string& value) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.segType)
}
void OrderStatusData::set_segtype(const char* value) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.segType)
}
void OrderStatusData::set_segtype(const char* value, size_t size) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.segType)
}
::std::string* OrderStatusData::mutable_segtype() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.segType)
  return segtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_segtype() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.segType)
  
  return segtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_segtype(::std::string* segtype) {
  if (segtype != NULL) {
    
  } else {
    
  }
  segtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segtype);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.segType)
}

// optional string secType = 13;
void OrderStatusData::clear_sectype() {
  sectype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::sectype() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.secType)
  return sectype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_sectype(const ::std::string& value) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.secType)
}
void OrderStatusData::set_sectype(const char* value) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.secType)
}
void OrderStatusData::set_sectype(const char* value, size_t size) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.secType)
}
::std::string* OrderStatusData::mutable_sectype() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.secType)
  return sectype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_sectype() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.secType)
  
  return sectype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_sectype(::std::string* sectype) {
  if (sectype != NULL) {
    
  } else {
    
  }
  sectype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sectype);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.secType)
}

// optional string orderType = 14;
void OrderStatusData::clear_ordertype() {
  ordertype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::ordertype() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.orderType)
  return ordertype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_ordertype(const ::std::string& value) {
  
  ordertype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.orderType)
}
void OrderStatusData::set_ordertype(const char* value) {
  
  ordertype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.orderType)
}
void OrderStatusData::set_ordertype(const char* value, size_t size) {
  
  ordertype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.orderType)
}
::std::string* OrderStatusData::mutable_ordertype() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.orderType)
  return ordertype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_ordertype() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.orderType)
  
  return ordertype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_ordertype(::std::string* ordertype) {
  if (ordertype != NULL) {
    
  } else {
    
  }
  ordertype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordertype);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.orderType)
}

// optional bool isLong = 15;
void OrderStatusData::clear_islong() {
  islong_ = false;
}
bool OrderStatusData::islong() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.isLong)
  return islong_;
}
void OrderStatusData::set_islong(bool value) {
  
  islong_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.isLong)
}

// optional sint64 totalQuantity = 16;
void OrderStatusData::clear_totalquantity() {
  totalquantity_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 OrderStatusData::totalquantity() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.totalQuantity)
  return totalquantity_;
}
void OrderStatusData::set_totalquantity(::google::protobuf::int64 value) {
  
  totalquantity_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.totalQuantity)
}

// optional sint32 totalQuantityScale = 17;
void OrderStatusData::clear_totalquantityscale() {
  totalquantityscale_ = 0;
}
::google::protobuf::int32 OrderStatusData::totalquantityscale() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.totalQuantityScale)
  return totalquantityscale_;
}
void OrderStatusData::set_totalquantityscale(::google::protobuf::int32 value) {
  
  totalquantityscale_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.totalQuantityScale)
}

// optional sint64 filledQuantity = 18;
void OrderStatusData::clear_filledquantity() {
  filledquantity_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 OrderStatusData::filledquantity() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.filledQuantity)
  return filledquantity_;
}
void OrderStatusData::set_filledquantity(::google::protobuf::int64 value) {
  
  filledquantity_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.filledQuantity)
}

// optional sint32 filledQuantityScale = 19;
void OrderStatusData::clear_filledquantityscale() {
  filledquantityscale_ = 0;
}
::google::protobuf::int32 OrderStatusData::filledquantityscale() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.filledQuantityScale)
  return filledquantityscale_;
}
void OrderStatusData::set_filledquantityscale(::google::protobuf::int32 value) {
  
  filledquantityscale_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.filledQuantityScale)
}

// optional double avgFillPrice = 20;
void OrderStatusData::clear_avgfillprice() {
  avgfillprice_ = 0;
}
double OrderStatusData::avgfillprice() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.avgFillPrice)
  return avgfillprice_;
}
void OrderStatusData::set_avgfillprice(double value) {
  
  avgfillprice_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.avgFillPrice)
}

// optional double limitPrice = 21;
void OrderStatusData::clear_limitprice() {
  limitprice_ = 0;
}
double OrderStatusData::limitprice() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.limitPrice)
  return limitprice_;
}
void OrderStatusData::set_limitprice(double value) {
  
  limitprice_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.limitPrice)
}

// optional double stopPrice = 22;
void OrderStatusData::clear_stopprice() {
  stopprice_ = 0;
}
double OrderStatusData::stopprice() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.stopPrice)
  return stopprice_;
}
void OrderStatusData::set_stopprice(double value) {
  
  stopprice_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.stopPrice)
}

// optional double realizedPnl = 23;
void OrderStatusData::clear_realizedpnl() {
  realizedpnl_ = 0;
}
double OrderStatusData::realizedpnl() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.realizedPnl)
  return realizedpnl_;
}
void OrderStatusData::set_realizedpnl(double value) {
  
  realizedpnl_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.realizedPnl)
}

// optional string status = 24;
void OrderStatusData::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::status() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.status)
  return status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.status)
}
void OrderStatusData::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.status)
}
void OrderStatusData::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.status)
}
::std::string* OrderStatusData::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_status() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.status)
}

// optional string replaceStatus = 25;
void OrderStatusData::clear_replacestatus() {
  replacestatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::replacestatus() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.replaceStatus)
  return replacestatus_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_replacestatus(const ::std::string& value) {
  
  replacestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.replaceStatus)
}
void OrderStatusData::set_replacestatus(const char* value) {
  
  replacestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.replaceStatus)
}
void OrderStatusData::set_replacestatus(const char* value, size_t size) {
  
  replacestatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.replaceStatus)
}
::std::string* OrderStatusData::mutable_replacestatus() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.replaceStatus)
  return replacestatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_replacestatus() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.replaceStatus)
  
  return replacestatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_replacestatus(::std::string* replacestatus) {
  if (replacestatus != NULL) {
    
  } else {
    
  }
  replacestatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), replacestatus);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.replaceStatus)
}

// optional string cancelStatus = 26;
void OrderStatusData::clear_cancelstatus() {
  cancelstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::cancelstatus() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.cancelStatus)
  return cancelstatus_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_cancelstatus(const ::std::string& value) {
  
  cancelstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.cancelStatus)
}
void OrderStatusData::set_cancelstatus(const char* value) {
  
  cancelstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.cancelStatus)
}
void OrderStatusData::set_cancelstatus(const char* value, size_t size) {
  
  cancelstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.cancelStatus)
}
::std::string* OrderStatusData::mutable_cancelstatus() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.cancelStatus)
  return cancelstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_cancelstatus() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.cancelStatus)
  
  return cancelstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_cancelstatus(::std::string* cancelstatus) {
  if (cancelstatus != NULL) {
    
  } else {
    
  }
  cancelstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cancelstatus);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.cancelStatus)
}

// optional bool outsideRth = 27;
void OrderStatusData::clear_outsiderth() {
  outsiderth_ = false;
}
bool OrderStatusData::outsiderth() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.outsideRth)
  return outsiderth_;
}
void OrderStatusData::set_outsiderth(bool value) {
  
  outsiderth_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.outsideRth)
}

// optional bool canModify = 28;
void OrderStatusData::clear_canmodify() {
  canmodify_ = false;
}
bool OrderStatusData::canmodify() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.canModify)
  return canmodify_;
}
void OrderStatusData::set_canmodify(bool value) {
  
  canmodify_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.canModify)
}

// optional bool canCancel = 29;
void OrderStatusData::clear_cancancel() {
  cancancel_ = false;
}
bool OrderStatusData::cancancel() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.canCancel)
  return cancancel_;
}
void OrderStatusData::set_cancancel(bool value) {
  
  cancancel_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.canCancel)
}

// optional bool liquidation = 30;
void OrderStatusData::clear_liquidation() {
  liquidation_ = false;
}
bool OrderStatusData::liquidation() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.liquidation)
  return liquidation_;
}
void OrderStatusData::set_liquidation(bool value) {
  
  liquidation_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.liquidation)
}

// optional string name = 31;
void OrderStatusData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::name() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.name)
}
void OrderStatusData::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.name)
}
void OrderStatusData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.name)
}
::std::string* OrderStatusData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_name() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.name)
}

// optional string source = 32;
void OrderStatusData::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::source() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.source)
}
void OrderStatusData::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.source)
}
void OrderStatusData::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.source)
}
::std::string* OrderStatusData::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_source() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.source)
}

// optional string errorMsg = 33;
void OrderStatusData::clear_errormsg() {
  errormsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::errormsg() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.errorMsg)
  return errormsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_errormsg(const ::std::string& value) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.errorMsg)
}
void OrderStatusData::set_errormsg(const char* value) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.errorMsg)
}
void OrderStatusData::set_errormsg(const char* value, size_t size) {
  
  errormsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.errorMsg)
}
::std::string* OrderStatusData::mutable_errormsg() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.errorMsg)
  return errormsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_errormsg() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.errorMsg)
  
  return errormsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_errormsg(::std::string* errormsg) {
  if (errormsg != NULL) {
    
  } else {
    
  }
  errormsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormsg);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.errorMsg)
}

// optional string attrDesc = 34;
void OrderStatusData::clear_attrdesc() {
  attrdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::attrdesc() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.attrDesc)
  return attrdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_attrdesc(const ::std::string& value) {
  
  attrdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.attrDesc)
}
void OrderStatusData::set_attrdesc(const char* value) {
  
  attrdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.attrDesc)
}
void OrderStatusData::set_attrdesc(const char* value, size_t size) {
  
  attrdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.attrDesc)
}
::std::string* OrderStatusData::mutable_attrdesc() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.attrDesc)
  return attrdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_attrdesc() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.attrDesc)
  
  return attrdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_attrdesc(::std::string* attrdesc) {
  if (attrdesc != NULL) {
    
  } else {
    
  }
  attrdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attrdesc);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.attrDesc)
}

// optional float commissionAndFee = 35;
void OrderStatusData::clear_commissionandfee() {
  commissionandfee_ = 0;
}
float OrderStatusData::commissionandfee() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.commissionAndFee)
  return commissionandfee_;
}
void OrderStatusData::set_commissionandfee(float value) {
  
  commissionandfee_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.commissionAndFee)
}

// optional uint64 openTime = 36;
void OrderStatusData::clear_opentime() {
  opentime_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OrderStatusData::opentime() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.openTime)
  return opentime_;
}
void OrderStatusData::set_opentime(::google::protobuf::uint64 value) {
  
  opentime_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.openTime)
}

// optional uint64 timestamp = 37;
void OrderStatusData::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OrderStatusData::timestamp() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.timestamp)
  return timestamp_;
}
void OrderStatusData::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.timestamp)
}

// optional string userMark = 38;
void OrderStatusData::clear_usermark() {
  usermark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderStatusData::usermark() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.userMark)
  return usermark_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_usermark(const ::std::string& value) {
  
  usermark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.userMark)
}
void OrderStatusData::set_usermark(const char* value) {
  
  usermark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.OrderStatusData.userMark)
}
void OrderStatusData::set_usermark(const char* value, size_t size) {
  
  usermark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.OrderStatusData.userMark)
}
::std::string* OrderStatusData::mutable_usermark() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.OrderStatusData.userMark)
  return usermark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderStatusData::release_usermark() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.OrderStatusData.userMark)
  
  return usermark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderStatusData::set_allocated_usermark(::std::string* usermark) {
  if (usermark != NULL) {
    
  } else {
    
  }
  usermark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usermark);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.OrderStatusData.userMark)
}

// optional double totalCashAmount = 39;
void OrderStatusData::clear_totalcashamount() {
  totalcashamount_ = 0;
}
double OrderStatusData::totalcashamount() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.totalCashAmount)
  return totalcashamount_;
}
void OrderStatusData::set_totalcashamount(double value) {
  
  totalcashamount_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.totalCashAmount)
}

// optional double filledCashAmount = 40;
void OrderStatusData::clear_filledcashamount() {
  filledcashamount_ = 0;
}
double OrderStatusData::filledcashamount() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.filledCashAmount)
  return filledcashamount_;
}
void OrderStatusData::set_filledcashamount(double value) {
  
  filledcashamount_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.filledCashAmount)
}

// optional double gst = 41;
void OrderStatusData::clear_gst() {
  gst_ = 0;
}
double OrderStatusData::gst() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.OrderStatusData.gst)
  return gst_;
}
void OrderStatusData::set_gst(double value) {
  
  gst_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.OrderStatusData.gst)
}

inline const OrderStatusData* OrderStatusData::internal_default_instance() {
  return &OrderStatusData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace push
}  // namespace tigeropen

// @@protoc_insertion_point(global_scope)
