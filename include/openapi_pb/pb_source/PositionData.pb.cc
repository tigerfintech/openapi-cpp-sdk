// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PositionData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PositionData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tigeropen {
namespace push {
namespace pb {

namespace {

const ::google::protobuf::Descriptor* PositionData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PositionData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PositionData_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PositionData_2eproto() {
  protobuf_AddDesc_PositionData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PositionData.proto");
  GOOGLE_CHECK(file != NULL);
  PositionData_descriptor_ = file->message_type(0);
  static const int PositionData_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, symbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, expiry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, strike_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, right_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, multiplier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, market_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, segtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, sectype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, positionscale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, averagecost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, latestprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, marketvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, unrealizedpnl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, saleable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, positionqty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, salableqty_),
  };
  PositionData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PositionData_descriptor_,
      PositionData::internal_default_instance(),
      PositionData_offsets_,
      -1,
      -1,
      -1,
      sizeof(PositionData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PositionData, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PositionData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PositionData_descriptor_, PositionData::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PositionData_2eproto() {
  PositionData_default_instance_.Shutdown();
  delete PositionData_reflection_;
}

void protobuf_InitDefaults_PositionData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  PositionData_default_instance_.DefaultConstruct();
  PositionData_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_PositionData_2eproto_once_);
void protobuf_InitDefaults_PositionData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_PositionData_2eproto_once_,
                 &protobuf_InitDefaults_PositionData_2eproto_impl);
}
void protobuf_AddDesc_PositionData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_PositionData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022PositionData.proto\022\021tigeropen.push.pb\""
    "\245\003\n\014PositionData\022\017\n\007account\030\001 \001(\t\022\016\n\006sym"
    "bol\030\002 \001(\t\022\016\n\006expiry\030\003 \001(\t\022\016\n\006strike\030\004 \001("
    "\t\022\r\n\005right\030\005 \001(\t\022\022\n\nidentifier\030\006 \001(\t\022\022\n\n"
    "multiplier\030\007 \001(\r\022\016\n\006market\030\010 \001(\t\022\020\n\010curr"
    "ency\030\t \001(\t\022\017\n\007segType\030\n \001(\t\022\017\n\007secType\030\013"
    " \001(\t\022\020\n\010position\030\014 \001(\022\022\025\n\rpositionScale\030"
    "\r \001(\021\022\023\n\013averageCost\030\016 \001(\001\022\023\n\013latestPric"
    "e\030\017 \001(\001\022\023\n\013marketValue\030\020 \001(\001\022\025\n\runrealiz"
    "edPnl\030\021 \001(\001\022\014\n\004name\030\022 \001(\t\022\021\n\ttimestamp\030\023"
    " \001(\004\022\020\n\010saleable\030\024 \001(\022\022\023\n\013positionQty\030\025 "
    "\001(\001\022\022\n\nsalableQty\030\026 \001(\001b\006proto3", 471);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PositionData.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PositionData_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_PositionData_2eproto_once_);
void protobuf_AddDesc_PositionData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_PositionData_2eproto_once_,
                 &protobuf_AddDesc_PositionData_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PositionData_2eproto {
  StaticDescriptorInitializer_PositionData_2eproto() {
    protobuf_AddDesc_PositionData_2eproto();
  }
} static_descriptor_initializer_PositionData_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionData::kAccountFieldNumber;
const int PositionData::kSymbolFieldNumber;
const int PositionData::kExpiryFieldNumber;
const int PositionData::kStrikeFieldNumber;
const int PositionData::kRightFieldNumber;
const int PositionData::kIdentifierFieldNumber;
const int PositionData::kMultiplierFieldNumber;
const int PositionData::kMarketFieldNumber;
const int PositionData::kCurrencyFieldNumber;
const int PositionData::kSegTypeFieldNumber;
const int PositionData::kSecTypeFieldNumber;
const int PositionData::kPositionFieldNumber;
const int PositionData::kPositionScaleFieldNumber;
const int PositionData::kAverageCostFieldNumber;
const int PositionData::kLatestPriceFieldNumber;
const int PositionData::kMarketValueFieldNumber;
const int PositionData::kUnrealizedPnlFieldNumber;
const int PositionData::kNameFieldNumber;
const int PositionData::kTimestampFieldNumber;
const int PositionData::kSaleableFieldNumber;
const int PositionData::kPositionQtyFieldNumber;
const int PositionData::kSalableQtyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionData::PositionData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PositionData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tigeropen.push.pb.PositionData)
}

void PositionData::InitAsDefaultInstance() {
}

PositionData::PositionData(const PositionData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tigeropen.push.pb.PositionData)
}

void PositionData::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strike_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  right_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sectype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&multiplier_, 0, reinterpret_cast<char*>(&salableqty_) -
    reinterpret_cast<char*>(&multiplier_) + sizeof(salableqty_));
  _cached_size_ = 0;
}

PositionData::~PositionData() {
  // @@protoc_insertion_point(destructor:tigeropen.push.pb.PositionData)
  SharedDtor();
}

void PositionData::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiry_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strike_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  right_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sectype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PositionData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PositionData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PositionData_descriptor_;
}

const PositionData& PositionData::default_instance() {
  protobuf_InitDefaults_PositionData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PositionData> PositionData_default_instance_;

PositionData* PositionData::New(::google::protobuf::Arena* arena) const {
  PositionData* n = new PositionData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PositionData::Clear() {
// @@protoc_insertion_point(message_clear_start:tigeropen.push.pb.PositionData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PositionData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PositionData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strike_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  right_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  multiplier_ = 0u;
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(positionscale_, marketvalue_);
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sectype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(unrealizedpnl_, salableqty_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PositionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tigeropen.push.pb.PositionData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.PositionData.account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_symbol;
        break;
      }

      // optional string symbol = 2;
      case 2: {
        if (tag == 18) {
         parse_symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.PositionData.symbol"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_expiry;
        break;
      }

      // optional string expiry = 3;
      case 3: {
        if (tag == 26) {
         parse_expiry:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expiry()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expiry().data(), this->expiry().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.PositionData.expiry"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_strike;
        break;
      }

      // optional string strike = 4;
      case 4: {
        if (tag == 34) {
         parse_strike:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strike()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strike().data(), this->strike().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.PositionData.strike"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_right;
        break;
      }

      // optional string right = 5;
      case 5: {
        if (tag == 42) {
         parse_right:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_right()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->right().data(), this->right().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.PositionData.right"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_identifier;
        break;
      }

      // optional string identifier = 6;
      case 6: {
        if (tag == 50) {
         parse_identifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identifier().data(), this->identifier().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.PositionData.identifier"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_multiplier;
        break;
      }

      // optional uint32 multiplier = 7;
      case 7: {
        if (tag == 56) {
         parse_multiplier:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &multiplier_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_market;
        break;
      }

      // optional string market = 8;
      case 8: {
        if (tag == 66) {
         parse_market:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_market()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->market().data(), this->market().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.PositionData.market"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_currency;
        break;
      }

      // optional string currency = 9;
      case 9: {
        if (tag == 74) {
         parse_currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency().data(), this->currency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.PositionData.currency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_segType;
        break;
      }

      // optional string segType = 10;
      case 10: {
        if (tag == 82) {
         parse_segType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_segtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->segtype().data(), this->segtype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.PositionData.segType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_secType;
        break;
      }

      // optional string secType = 11;
      case 11: {
        if (tag == 90) {
         parse_secType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sectype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sectype().data(), this->sectype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.PositionData.secType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_position;
        break;
      }

      // optional sint64 position = 12;
      case 12: {
        if (tag == 96) {
         parse_position:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_positionScale;
        break;
      }

      // optional sint32 positionScale = 13;
      case 13: {
        if (tag == 104) {
         parse_positionScale:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &positionscale_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_averageCost;
        break;
      }

      // optional double averageCost = 14;
      case 14: {
        if (tag == 113) {
         parse_averageCost:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &averagecost_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_latestPrice;
        break;
      }

      // optional double latestPrice = 15;
      case 15: {
        if (tag == 121) {
         parse_latestPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latestprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_marketValue;
        break;
      }

      // optional double marketValue = 16;
      case 16: {
        if (tag == 129) {
         parse_marketValue:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &marketvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_unrealizedPnl;
        break;
      }

      // optional double unrealizedPnl = 17;
      case 17: {
        if (tag == 137) {
         parse_unrealizedPnl:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &unrealizedpnl_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_name;
        break;
      }

      // optional string name = 18;
      case 18: {
        if (tag == 146) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tigeropen.push.pb.PositionData.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_timestamp;
        break;
      }

      // optional uint64 timestamp = 19;
      case 19: {
        if (tag == 152) {
         parse_timestamp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_saleable;
        break;
      }

      // optional sint64 saleable = 20;
      case 20: {
        if (tag == 160) {
         parse_saleable:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &saleable_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_positionQty;
        break;
      }

      // optional double positionQty = 21;
      case 21: {
        if (tag == 169) {
         parse_positionQty:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &positionqty_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(177)) goto parse_salableQty;
        break;
      }

      // optional double salableQty = 22;
      case 22: {
        if (tag == 177) {
         parse_salableQty:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &salableqty_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tigeropen.push.pb.PositionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tigeropen.push.pb.PositionData)
  return false;
#undef DO_
}

void PositionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tigeropen.push.pb.PositionData)
  // optional string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symbol(), output);
  }

  // optional string expiry = 3;
  if (this->expiry().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiry().data(), this->expiry().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.expiry");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->expiry(), output);
  }

  // optional string strike = 4;
  if (this->strike().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strike().data(), this->strike().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.strike");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strike(), output);
  }

  // optional string right = 5;
  if (this->right().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->right().data(), this->right().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.right");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->right(), output);
  }

  // optional string identifier = 6;
  if (this->identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), this->identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->identifier(), output);
  }

  // optional uint32 multiplier = 7;
  if (this->multiplier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->multiplier(), output);
  }

  // optional string market = 8;
  if (this->market().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->market().data(), this->market().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.market");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->market(), output);
  }

  // optional string currency = 9;
  if (this->currency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.currency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->currency(), output);
  }

  // optional string segType = 10;
  if (this->segtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segtype().data(), this->segtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.segType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->segtype(), output);
  }

  // optional string secType = 11;
  if (this->sectype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sectype().data(), this->sectype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.secType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sectype(), output);
  }

  // optional sint64 position = 12;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(12, this->position(), output);
  }

  // optional sint32 positionScale = 13;
  if (this->positionscale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(13, this->positionscale(), output);
  }

  // optional double averageCost = 14;
  if (this->averagecost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->averagecost(), output);
  }

  // optional double latestPrice = 15;
  if (this->latestprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->latestprice(), output);
  }

  // optional double marketValue = 16;
  if (this->marketvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->marketvalue(), output);
  }

  // optional double unrealizedPnl = 17;
  if (this->unrealizedpnl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->unrealizedpnl(), output);
  }

  // optional string name = 18;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->name(), output);
  }

  // optional uint64 timestamp = 19;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(19, this->timestamp(), output);
  }

  // optional sint64 saleable = 20;
  if (this->saleable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(20, this->saleable(), output);
  }

  // optional double positionQty = 21;
  if (this->positionqty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->positionqty(), output);
  }

  // optional double salableQty = 22;
  if (this->salableqty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->salableqty(), output);
  }

  // @@protoc_insertion_point(serialize_end:tigeropen.push.pb.PositionData)
}

::google::protobuf::uint8* PositionData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tigeropen.push.pb.PositionData)
  // optional string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symbol(), target);
  }

  // optional string expiry = 3;
  if (this->expiry().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiry().data(), this->expiry().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.expiry");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->expiry(), target);
  }

  // optional string strike = 4;
  if (this->strike().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strike().data(), this->strike().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.strike");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strike(), target);
  }

  // optional string right = 5;
  if (this->right().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->right().data(), this->right().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.right");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->right(), target);
  }

  // optional string identifier = 6;
  if (this->identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), this->identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->identifier(), target);
  }

  // optional uint32 multiplier = 7;
  if (this->multiplier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->multiplier(), target);
  }

  // optional string market = 8;
  if (this->market().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->market().data(), this->market().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.market");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->market(), target);
  }

  // optional string currency = 9;
  if (this->currency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.currency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->currency(), target);
  }

  // optional string segType = 10;
  if (this->segtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segtype().data(), this->segtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.segType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->segtype(), target);
  }

  // optional string secType = 11;
  if (this->sectype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sectype().data(), this->sectype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.secType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sectype(), target);
  }

  // optional sint64 position = 12;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(12, this->position(), target);
  }

  // optional sint32 positionScale = 13;
  if (this->positionscale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(13, this->positionscale(), target);
  }

  // optional double averageCost = 14;
  if (this->averagecost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->averagecost(), target);
  }

  // optional double latestPrice = 15;
  if (this->latestprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->latestprice(), target);
  }

  // optional double marketValue = 16;
  if (this->marketvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->marketvalue(), target);
  }

  // optional double unrealizedPnl = 17;
  if (this->unrealizedpnl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->unrealizedpnl(), target);
  }

  // optional string name = 18;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tigeropen.push.pb.PositionData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->name(), target);
  }

  // optional uint64 timestamp = 19;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(19, this->timestamp(), target);
  }

  // optional sint64 saleable = 20;
  if (this->saleable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(20, this->saleable(), target);
  }

  // optional double positionQty = 21;
  if (this->positionqty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->positionqty(), target);
  }

  // optional double salableQty = 22;
  if (this->salableqty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->salableqty(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tigeropen.push.pb.PositionData)
  return target;
}

size_t PositionData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tigeropen.push.pb.PositionData)
  size_t total_size = 0;

  // optional string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // optional string symbol = 2;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // optional string expiry = 3;
  if (this->expiry().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expiry());
  }

  // optional string strike = 4;
  if (this->strike().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strike());
  }

  // optional string right = 5;
  if (this->right().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->right());
  }

  // optional string identifier = 6;
  if (this->identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identifier());
  }

  // optional uint32 multiplier = 7;
  if (this->multiplier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->multiplier());
  }

  // optional string market = 8;
  if (this->market().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->market());
  }

  // optional string currency = 9;
  if (this->currency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency());
  }

  // optional string segType = 10;
  if (this->segtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->segtype());
  }

  // optional string secType = 11;
  if (this->sectype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sectype());
  }

  // optional sint64 position = 12;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->position());
  }

  // optional sint32 positionScale = 13;
  if (this->positionscale() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->positionscale());
  }

  // optional double averageCost = 14;
  if (this->averagecost() != 0) {
    total_size += 1 + 8;
  }

  // optional double latestPrice = 15;
  if (this->latestprice() != 0) {
    total_size += 1 + 8;
  }

  // optional double marketValue = 16;
  if (this->marketvalue() != 0) {
    total_size += 2 + 8;
  }

  // optional double unrealizedPnl = 17;
  if (this->unrealizedpnl() != 0) {
    total_size += 2 + 8;
  }

  // optional string name = 18;
  if (this->name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint64 timestamp = 19;
  if (this->timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // optional sint64 saleable = 20;
  if (this->saleable() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->saleable());
  }

  // optional double positionQty = 21;
  if (this->positionqty() != 0) {
    total_size += 2 + 8;
  }

  // optional double salableQty = 22;
  if (this->salableqty() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PositionData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tigeropen.push.pb.PositionData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PositionData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PositionData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tigeropen.push.pb.PositionData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tigeropen.push.pb.PositionData)
    UnsafeMergeFrom(*source);
  }
}

void PositionData::MergeFrom(const PositionData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tigeropen.push.pb.PositionData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PositionData::UnsafeMergeFrom(const PositionData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.expiry().size() > 0) {

    expiry_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expiry_);
  }
  if (from.strike().size() > 0) {

    strike_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strike_);
  }
  if (from.right().size() > 0) {

    right_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.right_);
  }
  if (from.identifier().size() > 0) {

    identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifier_);
  }
  if (from.multiplier() != 0) {
    set_multiplier(from.multiplier());
  }
  if (from.market().size() > 0) {

    market_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_);
  }
  if (from.currency().size() > 0) {

    currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  if (from.segtype().size() > 0) {

    segtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.segtype_);
  }
  if (from.sectype().size() > 0) {

    sectype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sectype_);
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
  if (from.positionscale() != 0) {
    set_positionscale(from.positionscale());
  }
  if (from.averagecost() != 0) {
    set_averagecost(from.averagecost());
  }
  if (from.latestprice() != 0) {
    set_latestprice(from.latestprice());
  }
  if (from.marketvalue() != 0) {
    set_marketvalue(from.marketvalue());
  }
  if (from.unrealizedpnl() != 0) {
    set_unrealizedpnl(from.unrealizedpnl());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.saleable() != 0) {
    set_saleable(from.saleable());
  }
  if (from.positionqty() != 0) {
    set_positionqty(from.positionqty());
  }
  if (from.salableqty() != 0) {
    set_salableqty(from.salableqty());
  }
}

void PositionData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tigeropen.push.pb.PositionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionData::CopyFrom(const PositionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tigeropen.push.pb.PositionData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PositionData::IsInitialized() const {

  return true;
}

void PositionData::Swap(PositionData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionData::InternalSwap(PositionData* other) {
  account_.Swap(&other->account_);
  symbol_.Swap(&other->symbol_);
  expiry_.Swap(&other->expiry_);
  strike_.Swap(&other->strike_);
  right_.Swap(&other->right_);
  identifier_.Swap(&other->identifier_);
  std::swap(multiplier_, other->multiplier_);
  market_.Swap(&other->market_);
  currency_.Swap(&other->currency_);
  segtype_.Swap(&other->segtype_);
  sectype_.Swap(&other->sectype_);
  std::swap(position_, other->position_);
  std::swap(positionscale_, other->positionscale_);
  std::swap(averagecost_, other->averagecost_);
  std::swap(latestprice_, other->latestprice_);
  std::swap(marketvalue_, other->marketvalue_);
  std::swap(unrealizedpnl_, other->unrealizedpnl_);
  name_.Swap(&other->name_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(saleable_, other->saleable_);
  std::swap(positionqty_, other->positionqty_);
  std::swap(salableqty_, other->salableqty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PositionData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PositionData_descriptor_;
  metadata.reflection = PositionData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PositionData

// optional string account = 1;
void PositionData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PositionData::account() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.account)
}
void PositionData::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.PositionData.account)
}
void PositionData::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.PositionData.account)
}
::std::string* PositionData::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.PositionData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PositionData::release_account() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.PositionData.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.PositionData.account)
}

// optional string symbol = 2;
void PositionData::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PositionData::symbol() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.symbol)
  return symbol_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.symbol)
}
void PositionData::set_symbol(const char* value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.PositionData.symbol)
}
void PositionData::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.PositionData.symbol)
}
::std::string* PositionData::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.PositionData.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PositionData::release_symbol() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.PositionData.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.PositionData.symbol)
}

// optional string expiry = 3;
void PositionData::clear_expiry() {
  expiry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PositionData::expiry() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.expiry)
  return expiry_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_expiry(const ::std::string& value) {
  
  expiry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.expiry)
}
void PositionData::set_expiry(const char* value) {
  
  expiry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.PositionData.expiry)
}
void PositionData::set_expiry(const char* value, size_t size) {
  
  expiry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.PositionData.expiry)
}
::std::string* PositionData::mutable_expiry() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.PositionData.expiry)
  return expiry_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PositionData::release_expiry() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.PositionData.expiry)
  
  return expiry_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_allocated_expiry(::std::string* expiry) {
  if (expiry != NULL) {
    
  } else {
    
  }
  expiry_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiry);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.PositionData.expiry)
}

// optional string strike = 4;
void PositionData::clear_strike() {
  strike_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PositionData::strike() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.strike)
  return strike_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_strike(const ::std::string& value) {
  
  strike_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.strike)
}
void PositionData::set_strike(const char* value) {
  
  strike_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.PositionData.strike)
}
void PositionData::set_strike(const char* value, size_t size) {
  
  strike_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.PositionData.strike)
}
::std::string* PositionData::mutable_strike() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.PositionData.strike)
  return strike_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PositionData::release_strike() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.PositionData.strike)
  
  return strike_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_allocated_strike(::std::string* strike) {
  if (strike != NULL) {
    
  } else {
    
  }
  strike_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strike);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.PositionData.strike)
}

// optional string right = 5;
void PositionData::clear_right() {
  right_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PositionData::right() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.right)
  return right_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_right(const ::std::string& value) {
  
  right_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.right)
}
void PositionData::set_right(const char* value) {
  
  right_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.PositionData.right)
}
void PositionData::set_right(const char* value, size_t size) {
  
  right_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.PositionData.right)
}
::std::string* PositionData::mutable_right() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.PositionData.right)
  return right_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PositionData::release_right() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.PositionData.right)
  
  return right_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_allocated_right(::std::string* right) {
  if (right != NULL) {
    
  } else {
    
  }
  right_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), right);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.PositionData.right)
}

// optional string identifier = 6;
void PositionData::clear_identifier() {
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PositionData::identifier() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.identifier)
  return identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_identifier(const ::std::string& value) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.identifier)
}
void PositionData::set_identifier(const char* value) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.PositionData.identifier)
}
void PositionData::set_identifier(const char* value, size_t size) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.PositionData.identifier)
}
::std::string* PositionData::mutable_identifier() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.PositionData.identifier)
  return identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PositionData::release_identifier() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.PositionData.identifier)
  
  return identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_allocated_identifier(::std::string* identifier) {
  if (identifier != NULL) {
    
  } else {
    
  }
  identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifier);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.PositionData.identifier)
}

// optional uint32 multiplier = 7;
void PositionData::clear_multiplier() {
  multiplier_ = 0u;
}
::google::protobuf::uint32 PositionData::multiplier() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.multiplier)
  return multiplier_;
}
void PositionData::set_multiplier(::google::protobuf::uint32 value) {
  
  multiplier_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.multiplier)
}

// optional string market = 8;
void PositionData::clear_market() {
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PositionData::market() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.market)
  return market_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_market(const ::std::string& value) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.market)
}
void PositionData::set_market(const char* value) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.PositionData.market)
}
void PositionData::set_market(const char* value, size_t size) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.PositionData.market)
}
::std::string* PositionData::mutable_market() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.PositionData.market)
  return market_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PositionData::release_market() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.PositionData.market)
  
  return market_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_allocated_market(::std::string* market) {
  if (market != NULL) {
    
  } else {
    
  }
  market_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), market);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.PositionData.market)
}

// optional string currency = 9;
void PositionData::clear_currency() {
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PositionData::currency() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.currency)
  return currency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_currency(const ::std::string& value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.currency)
}
void PositionData::set_currency(const char* value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.PositionData.currency)
}
void PositionData::set_currency(const char* value, size_t size) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.PositionData.currency)
}
::std::string* PositionData::mutable_currency() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.PositionData.currency)
  return currency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PositionData::release_currency() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.PositionData.currency)
  
  return currency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_allocated_currency(::std::string* currency) {
  if (currency != NULL) {
    
  } else {
    
  }
  currency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.PositionData.currency)
}

// optional string segType = 10;
void PositionData::clear_segtype() {
  segtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PositionData::segtype() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.segType)
  return segtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_segtype(const ::std::string& value) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.segType)
}
void PositionData::set_segtype(const char* value) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.PositionData.segType)
}
void PositionData::set_segtype(const char* value, size_t size) {
  
  segtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.PositionData.segType)
}
::std::string* PositionData::mutable_segtype() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.PositionData.segType)
  return segtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PositionData::release_segtype() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.PositionData.segType)
  
  return segtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_allocated_segtype(::std::string* segtype) {
  if (segtype != NULL) {
    
  } else {
    
  }
  segtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segtype);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.PositionData.segType)
}

// optional string secType = 11;
void PositionData::clear_sectype() {
  sectype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PositionData::sectype() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.secType)
  return sectype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_sectype(const ::std::string& value) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.secType)
}
void PositionData::set_sectype(const char* value) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.PositionData.secType)
}
void PositionData::set_sectype(const char* value, size_t size) {
  
  sectype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.PositionData.secType)
}
::std::string* PositionData::mutable_sectype() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.PositionData.secType)
  return sectype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PositionData::release_sectype() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.PositionData.secType)
  
  return sectype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_allocated_sectype(::std::string* sectype) {
  if (sectype != NULL) {
    
  } else {
    
  }
  sectype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sectype);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.PositionData.secType)
}

// optional sint64 position = 12;
void PositionData::clear_position() {
  position_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 PositionData::position() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.position)
  return position_;
}
void PositionData::set_position(::google::protobuf::int64 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.position)
}

// optional sint32 positionScale = 13;
void PositionData::clear_positionscale() {
  positionscale_ = 0;
}
::google::protobuf::int32 PositionData::positionscale() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.positionScale)
  return positionscale_;
}
void PositionData::set_positionscale(::google::protobuf::int32 value) {
  
  positionscale_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.positionScale)
}

// optional double averageCost = 14;
void PositionData::clear_averagecost() {
  averagecost_ = 0;
}
double PositionData::averagecost() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.averageCost)
  return averagecost_;
}
void PositionData::set_averagecost(double value) {
  
  averagecost_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.averageCost)
}

// optional double latestPrice = 15;
void PositionData::clear_latestprice() {
  latestprice_ = 0;
}
double PositionData::latestprice() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.latestPrice)
  return latestprice_;
}
void PositionData::set_latestprice(double value) {
  
  latestprice_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.latestPrice)
}

// optional double marketValue = 16;
void PositionData::clear_marketvalue() {
  marketvalue_ = 0;
}
double PositionData::marketvalue() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.marketValue)
  return marketvalue_;
}
void PositionData::set_marketvalue(double value) {
  
  marketvalue_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.marketValue)
}

// optional double unrealizedPnl = 17;
void PositionData::clear_unrealizedpnl() {
  unrealizedpnl_ = 0;
}
double PositionData::unrealizedpnl() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.unrealizedPnl)
  return unrealizedpnl_;
}
void PositionData::set_unrealizedpnl(double value) {
  
  unrealizedpnl_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.unrealizedPnl)
}

// optional string name = 18;
void PositionData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PositionData::name() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.name)
}
void PositionData::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tigeropen.push.pb.PositionData.name)
}
void PositionData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tigeropen.push.pb.PositionData.name)
}
::std::string* PositionData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tigeropen.push.pb.PositionData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PositionData::release_name() {
  // @@protoc_insertion_point(field_release:tigeropen.push.pb.PositionData.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PositionData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tigeropen.push.pb.PositionData.name)
}

// optional uint64 timestamp = 19;
void PositionData::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PositionData::timestamp() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.timestamp)
  return timestamp_;
}
void PositionData::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.timestamp)
}

// optional sint64 saleable = 20;
void PositionData::clear_saleable() {
  saleable_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 PositionData::saleable() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.saleable)
  return saleable_;
}
void PositionData::set_saleable(::google::protobuf::int64 value) {
  
  saleable_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.saleable)
}

// optional double positionQty = 21;
void PositionData::clear_positionqty() {
  positionqty_ = 0;
}
double PositionData::positionqty() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.positionQty)
  return positionqty_;
}
void PositionData::set_positionqty(double value) {
  
  positionqty_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.positionQty)
}

// optional double salableQty = 22;
void PositionData::clear_salableqty() {
  salableqty_ = 0;
}
double PositionData::salableqty() const {
  // @@protoc_insertion_point(field_get:tigeropen.push.pb.PositionData.salableQty)
  return salableqty_;
}
void PositionData::set_salableqty(double value) {
  
  salableqty_ = value;
  // @@protoc_insertion_point(field_set:tigeropen.push.pb.PositionData.salableQty)
}

inline const PositionData* PositionData::internal_default_instance() {
  return &PositionData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace push
}  // namespace tigeropen

// @@protoc_insertion_point(global_scope)
